
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.Date;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import net.proteanit.sql.DbUtils;

public class GUI_jobStates extends javax.swing.JFrame {

    private String currentJobID = "";
    private String currentQuoteID = "";
    private String currentClientID = "";
    private String DefiniteCurrentClientID = "";
    private String acceptedQuoteID = "";
    private String jobState = "";
    private String jobQuoteState = "";
    private int itemStateChangedInt = 1;

    Connection conn;
    Statement st;
    ResultSet rs;
    String addOrChange = "x";

    ///variables needed for contingency and charge percentages
    double materialCont;
    double labourCont;
    double overheadCont;

    double materialCharge;
    double labourCharge;
    double overheadCharge;

    String selectedItemCode = "";
    String selectedItem[] = new String[10];

    public GUI_jobStates(String passedThroughIDOfJob) {
        //make DB connection
        connection();

        //set the JOB ID
        currentJobID = passedThroughIDOfJob;

        //set the Client ID
        setClientID();

        //initialize GUI
        initComponents();

        //custom initialization for GUI component management
        //determine if the create or manage button was pressed
        if (currentJobID.equals("")) {
            //new job button was pressed
            initComponentsNewJob();

        } else {
            //manageJob button was pressed
            initialLoadComponentsManageJob();
            currentClientID = DefiniteCurrentClientID;
            selectCorrectClientInJobsPage();
        }

    }

    private GUI_jobStates() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel137 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jobStatesTabPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        job_tf_title = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        job_ta_specification = new javax.swing.JTextArea();
        job_tf_siteLocation = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        job_but_insertAdr = new javax.swing.JButton();
        job_spin_date = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        job_but_done = new javax.swing.JButton();
        job_but_cancel = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        job_ta_comments = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        job_but_createJob = new javax.swing.JButton();
        job_but_createQuote = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        job_tf_fname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        job_tf_lname = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        job_tf_contactNr = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        job_tf_email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        job_but_changeDetails = new javax.swing.JButton();
        job_cb_selectClient = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        quote_spin_cont_mat = new javax.swing.JSpinner();
        quote_spin_cont_over = new javax.swing.JSpinner();
        quote_spin_cont_labour = new javax.swing.JSpinner();
        quote_tf_cost_mat = new javax.swing.JTextField();
        quote_tf_cost_over = new javax.swing.JTextField();
        quote_tf_cost_labour = new javax.swing.JTextField();
        quote_spin_charge_mat = new javax.swing.JSpinner();
        quote_spin_charge_over = new javax.swing.JSpinner();
        quote_spin_charge_labour = new javax.swing.JSpinner();
        jLabel69 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        quote_tf_chFee_labour = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        quote_tf_final_over = new javax.swing.JTextField();
        quote_tf_final_labour = new javax.swing.JTextField();
        quote_tf_cost_subtotal = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        quote_tf_total = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        quote_tf_final_mat = new javax.swing.JTextField();
        quote_tf_chFee_over = new javax.swing.JTextField();
        quote_tf_chFee_mat = new javax.swing.JTextField();
        quote_tf_finalCharges = new javax.swing.JTextField();
        quote_but_resetCharges = new javax.swing.JButton();
        quote_but_create = new javax.swing.JButton();
        quote_but_jobDesc = new javax.swing.JButton();
        quote_TabPane = new javax.swing.JTabbedPane();
        jPanel34 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jLabel114 = new javax.swing.JLabel();
        quote_mat_tf_item = new javax.swing.JTextField();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        quote_mat_but_done = new javax.swing.JButton();
        quote_mat_spin_count = new javax.swing.JSpinner();
        quote_mat_but_cancel = new javax.swing.JButton();
        quote_mat_tf_cost = new javax.swing.JTextField();
        jScrollPane14 = new javax.swing.JScrollPane();
        quote_mat_li_materials = new javax.swing.JList<>();
        quote_mat_but_change = new javax.swing.JButton();
        quote_mat_but_add = new javax.swing.JButton();
        quote_mat_but_remove = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jLabel117 = new javax.swing.JLabel();
        quote_over_tf_overhead = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        quote_over_but_done = new javax.swing.JButton();
        quote_over_but_cancel = new javax.swing.JButton();
        quote_over_tf_total = new javax.swing.JTextField();
        jScrollPane15 = new javax.swing.JScrollPane();
        quote_over_li_overheads = new javax.swing.JList<>();
        quote_over_but_change = new javax.swing.JButton();
        quote_over_but_add = new javax.swing.JButton();
        quote_over_but_remove = new javax.swing.JButton();
        jPanel38 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        quote_labour_li_labour = new javax.swing.JList<>();
        jPanel39 = new javax.swing.JPanel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        quote_labour_but_done = new javax.swing.JButton();
        quote_labour_but_cancel = new javax.swing.JButton();
        quote_labour_combo_workers = new javax.swing.JComboBox<>();
        jLabel60 = new javax.swing.JLabel();
        quote_labour_l_rate = new javax.swing.JLabel();
        quote_labour_spin_hours = new javax.swing.JSpinner();
        quote_labour_but_remove = new javax.swing.JButton();
        quote_labour_but_change = new javax.swing.JButton();
        quote_labour_but_add = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        quoteID_l = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        quote_but_acc = new javax.swing.JButton();
        quote_but_rej = new javax.swing.JButton();
        quote_but_delete = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        quote_allquotes_combo = new javax.swing.JComboBox();
        selectedQuoteState = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        work_tf_PCost_mat = new javax.swing.JTextField();
        work_tf_PCost_over = new javax.swing.JTextField();
        work_tf_PCost_labour = new javax.swing.JTextField();
        work_tf_PCost_total = new javax.swing.JTextField();
        jLabel97 = new javax.swing.JLabel();
        work_tf_ACost_mat = new javax.swing.JTextField();
        work_tf_ACost_over = new javax.swing.JTextField();
        work_tf_ACost_labour = new javax.swing.JTextField();
        work_tf_Quote_mat = new javax.swing.JTextField();
        work_tf_Quote_over = new javax.swing.JTextField();
        work_tf_Quote_labour = new javax.swing.JTextField();
        work_proBar_primary_mat = new javax.swing.JProgressBar();
        work_tf_ACost_total = new javax.swing.JTextField();
        work_tf_Quote_total = new javax.swing.JTextField();
        work_proBar_primary_over = new javax.swing.JProgressBar();
        work_proBar_primary_labour = new javax.swing.JProgressBar();
        work_proBar_primary_total = new javax.swing.JProgressBar();
        work_proBar_secondary_over = new javax.swing.JProgressBar();
        work_proBar_secondary_labour = new javax.swing.JProgressBar();
        work_proBar_secondary_total = new javax.swing.JProgressBar();
        work_proBar_secondary_mat = new javax.swing.JProgressBar();
        jLabel96 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel94 = new javax.swing.JLabel();
        warningMat = new javax.swing.JLabel();
        warningOver = new javax.swing.JLabel();
        warningLab = new javax.swing.JLabel();
        warningTotal = new javax.swing.JLabel();
        work_TabPane = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        work_mat_tf_item = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        work_mat_but_done = new javax.swing.JButton();
        work_mat_spin_count = new javax.swing.JSpinner();
        work_mat_but_cancel = new javax.swing.JButton();
        work_mat_tf_cost = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        work_mat_li_materials = new javax.swing.JList<>();
        work_mat_but_change = new javax.swing.JButton();
        work_mat_but_add = new javax.swing.JButton();
        work_mat_but_remove = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel99 = new javax.swing.JLabel();
        work_over_tf_overhead = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        work_over_but_done = new javax.swing.JButton();
        work_over_but_cancel = new javax.swing.JButton();
        work_over_tf_cost = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane12 = new javax.swing.JScrollPane();
        work_over_li_overheads = new javax.swing.JList<>();
        work_over_but_change = new javax.swing.JButton();
        work_over_but_add = new javax.swing.JButton();
        work_over_but_remove = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        work_labour_li_labour = new javax.swing.JList<>();
        jPanel33 = new javax.swing.JPanel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        work_labour_spin_hours = new javax.swing.JSpinner();
        jComboBox3 = new javax.swing.JComboBox();
        work_over_tf_labour = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        rateSpinner = new javax.swing.JSpinner();
        work_labour_but_add = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel95 = new javax.swing.JLabel();
        work_but_finaliseJob = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        final_table_costs = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        final_rb_all = new javax.swing.JRadioButton();
        final_rb_mat = new javax.swing.JRadioButton();
        final_rb_over = new javax.swing.JRadioButton();
        final_rb_lab = new javax.swing.JRadioButton();
        final_but_signOff = new javax.swing.JButton();
        jLabel136 = new javax.swing.JLabel();
        final_tf_quote = new javax.swing.JTextField();
        final_tf_rec = new javax.swing.JTextField();
        jLabel138 = new javax.swing.JLabel();
        final_tf_outst = new javax.swing.JTextField();
        jLabel139 = new javax.swing.JLabel();
        final_but_managePay = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        final_tf_ACost_mat = new javax.swing.JTextField();
        final_tf_ACost_over = new javax.swing.JTextField();
        final_tf_ACost_labour = new javax.swing.JTextField();
        final_tf_Quote_mat = new javax.swing.JTextField();
        final_tf_Quote_over = new javax.swing.JTextField();
        final_tf_Quote_labour = new javax.swing.JTextField();
        final_proBar_primary_mat = new javax.swing.JProgressBar();
        final_tf_ACost_total = new javax.swing.JTextField();
        final_tf_Quote_total = new javax.swing.JTextField();
        final_proBar_primary_over = new javax.swing.JProgressBar();
        final_proBar_primary_labour = new javax.swing.JProgressBar();
        final_proBar_primary_total = new javax.swing.JProgressBar();
        final_proBar_secondary_over = new javax.swing.JProgressBar();
        final_proBar_secondary_labour = new javax.swing.JProgressBar();
        final_proBar_secondary_total = new javax.swing.JProgressBar();
        final_proBar_secondary_mat = new javax.swing.JProgressBar();
        jLabel106 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel107 = new javax.swing.JLabel();
        final_tf_PCost_mat = new javax.swing.JTextField();
        final_tf_PCost_over = new javax.swing.JTextField();
        final_tf_PCost_labour = new javax.swing.JTextField();
        final_tf_PCost_total = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        l_email = new javax.swing.JLabel();
        l_contactNr = new javax.swing.JLabel();
        l_clientFullname = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        l_clientCode = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        l_siteLocation = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        l_jobTitle = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        l_currentCost = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        l_jobID = new javax.swing.JLabel();
        l_plannedCost = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        l_quoteID = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        l_totalQuote = new javax.swing.JLabel();
        l_quoteState = new javax.swing.JLabel();
        l_jobState = new javax.swing.JLabel();
        but_close = new javax.swing.JButton();

        jLabel137.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel137.setForeground(new java.awt.Color(255, 51, 0));
        jLabel137.setText("!");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jobStatesTabPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jobStatesTabPane.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel12.setText("Job Title");

        job_tf_title.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("Job Specification");

        job_ta_specification.setColumns(20);
        job_ta_specification.setRows(5);
        jScrollPane3.setViewportView(job_ta_specification);

        job_tf_siteLocation.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_tf_siteLocation.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Site Location");

        job_but_insertAdr.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_but_insertAdr.setText("Insert Address");
        job_but_insertAdr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_but_insertAdrActionPerformed(evt);
            }
        });

        job_spin_date.setModel(new javax.swing.SpinnerDateModel());

        jLabel19.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel19.setText("Date");

        job_but_done.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_but_done.setText("Done");
        job_but_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_but_doneActionPerformed(evt);
            }
        });

        job_but_cancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_but_cancel.setText("Cancel");
        job_but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_but_cancelActionPerformed(evt);
            }
        });

        job_ta_comments.setColumns(20);
        job_ta_comments.setRows(5);
        jScrollPane4.setViewportView(job_ta_comments);

        jLabel18.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel18.setText("Comments");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(job_tf_title, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel12))
                                .addGap(79, 79, 79)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(job_spin_date, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)))
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(job_tf_siteLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(job_but_insertAdr)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(job_but_cancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(job_but_done))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(386, 386, 386)))
                        .addGap(16, 16, 16))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel19))
                .addGap(2, 2, 2)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(job_tf_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(job_spin_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(2, 2, 2)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(job_tf_siteLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(job_but_insertAdr)
                    .addComponent(job_but_done)
                    .addComponent(job_but_cancel))
                .addGap(14, 14, 14))
        );

        job_but_createJob.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        job_but_createJob.setText("Create Job");
        job_but_createJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_but_createJobActionPerformed(evt);
            }
        });

        job_but_createQuote.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        job_but_createQuote.setText("Create Quote");
        job_but_createQuote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_but_createQuoteActionPerformed(evt);
            }
        });

        job_tf_fname.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_tf_fname.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("First Name");

        job_tf_lname.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_tf_lname.setEnabled(false);

        jLabel49.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel49.setText("Last Name");

        job_tf_contactNr.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_tf_contactNr.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setText("Contact Number");

        job_tf_email.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_tf_email.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Contact Email");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(job_tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(job_tf_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(job_tf_contactNr, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(job_tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(job_tf_lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(job_tf_contactNr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(job_tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(job_tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        job_but_changeDetails.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        job_but_changeDetails.setText("Change Details");
        job_but_changeDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_but_changeDetailsActionPerformed(evt);
            }
        });

        job_cb_selectClient.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        job_cb_selectClient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Client", "Johan Botha", "James Kotze" }));
        job_cb_selectClient.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                job_cb_selectClientItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(job_cb_selectClient, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(job_but_createJob, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(job_but_changeDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(job_but_createQuote)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(job_cb_selectClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(job_but_createJob)
                    .addComponent(job_but_changeDetails)
                    .addComponent(job_but_createQuote))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jobStatesTabPane.addTab("Job", jPanel1);

        jPanel24.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel66.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel66.setText("Labour:");

        jLabel65.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel65.setText("Overheads:");

        jLabel64.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel64.setText("Materials:");

        quote_spin_cont_mat.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        quote_spin_cont_mat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quote_spin_cont_matStateChanged(evt);
            }
        });

        quote_spin_cont_over.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        quote_spin_cont_over.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quote_spin_cont_overStateChanged(evt);
            }
        });

        quote_spin_cont_labour.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        quote_spin_cont_labour.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quote_spin_cont_labourStateChanged(evt);
            }
        });

        quote_tf_cost_mat.setEditable(false);

        quote_tf_cost_over.setEditable(false);

        quote_tf_cost_labour.setEditable(false);

        quote_spin_charge_mat.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        quote_spin_charge_mat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quote_spin_charge_matStateChanged(evt);
            }
        });

        quote_spin_charge_over.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        quote_spin_charge_over.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quote_spin_charge_overStateChanged(evt);
            }
        });

        quote_spin_charge_labour.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        quote_spin_charge_labour.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quote_spin_charge_labourStateChanged(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel69.setText("Contingency %");

        jLabel77.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel77.setText("Charge %");

        jLabel78.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel78.setText("Charge Amount");

        quote_tf_chFee_labour.setEditable(false);

        jLabel79.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel79.setText("Final Price");

        jLabel80.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel80.setText("Cost");

        quote_tf_final_over.setEditable(false);

        quote_tf_final_labour.setEditable(false);

        quote_tf_cost_subtotal.setEditable(false);

        jLabel81.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel81.setText("Total");

        quote_tf_total.setEditable(false);

        jLabel82.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel82.setText("Final Charges:");

        jLabel83.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel83.setText("Subtotal");

        quote_tf_final_mat.setEditable(false);

        quote_tf_chFee_over.setEditable(false);

        quote_tf_chFee_mat.setEditable(false);

        quote_tf_finalCharges.setEditable(false);

        quote_but_resetCharges.setText("Reset Charges");
        quote_but_resetCharges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_but_resetChargesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel66)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel83))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel80)
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(quote_tf_cost_subtotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addComponent(quote_tf_cost_labour, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(quote_tf_cost_over, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(quote_tf_cost_mat, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quote_spin_cont_over, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quote_spin_cont_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quote_spin_cont_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel69))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(quote_spin_charge_over)
                                        .addComponent(quote_spin_charge_labour)
                                        .addComponent(quote_spin_charge_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel77)))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(quote_but_resetCharges, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel78)
                            .addComponent(quote_tf_chFee_mat)
                            .addComponent(quote_tf_chFee_over)
                            .addComponent(quote_tf_chFee_labour, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(jLabel82, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel81)
                        .addGap(16, 16, 16)))
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel79)
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(quote_tf_final_mat)
                        .addComponent(quote_tf_final_over)
                        .addComponent(quote_tf_final_labour)
                        .addComponent(quote_tf_total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                        .addComponent(quote_tf_finalCharges, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel69)
                                    .addComponent(jLabel77))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel24Layout.createSequentialGroup()
                                        .addComponent(quote_spin_cont_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(quote_spin_cont_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(quote_spin_cont_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel24Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(quote_spin_charge_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(quote_spin_charge_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(quote_spin_charge_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quote_tf_chFee_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel79)
                                    .addComponent(jLabel78))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quote_tf_final_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quote_tf_chFee_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quote_tf_final_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quote_tf_chFee_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quote_tf_final_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quote_tf_finalCharges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel82))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel81)
                                    .addComponent(quote_tf_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(quote_but_resetCharges))))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel80)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel64)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(quote_tf_cost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quote_tf_cost_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel65))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quote_tf_cost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel66))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quote_tf_cost_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel83))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quote_but_create.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        quote_but_create.setText("Create");
        quote_but_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_but_createActionPerformed(evt);
            }
        });

        quote_but_jobDesc.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        quote_but_jobDesc.setText("Job Description");
        quote_but_jobDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_but_jobDescActionPerformed(evt);
            }
        });

        quote_TabPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        quote_TabPane.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        quote_TabPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quote_TabPaneMouseClicked(evt);
            }
        });

        jPanel35.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel114.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel114.setText("Item");

        quote_mat_tf_item.setEnabled(false);

        jLabel115.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel115.setText("Cost Per Item");

        jLabel116.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel116.setText("Count");

        quote_mat_but_done.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_mat_but_done.setText("Done");
        quote_mat_but_done.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quote_mat_but_doneMouseClicked(evt);
            }
        });
        quote_mat_but_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_mat_but_doneActionPerformed(evt);
            }
        });

        quote_mat_spin_count.setEnabled(false);

        quote_mat_but_cancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_mat_but_cancel.setText("Cancel");
        quote_mat_but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_mat_but_cancelActionPerformed(evt);
            }
        });

        quote_mat_tf_cost.setEnabled(false);

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel114)
                    .addComponent(jLabel115)
                    .addComponent(jLabel116))
                .addGap(18, 18, 18)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addComponent(quote_mat_spin_count, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quote_mat_but_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quote_mat_but_done))
                    .addComponent(quote_mat_tf_item)
                    .addComponent(quote_mat_tf_cost))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel114)
                    .addComponent(quote_mat_tf_item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel115)
                    .addComponent(quote_mat_tf_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel116)
                    .addComponent(quote_mat_but_done)
                    .addComponent(quote_mat_spin_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quote_mat_but_cancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quote_mat_li_materials.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quote_mat_li_materials.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quote_mat_li_materialsMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(quote_mat_li_materials);

        quote_mat_but_change.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_mat_but_change.setText("Change");
        quote_mat_but_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_mat_but_changeActionPerformed(evt);
            }
        });

        quote_mat_but_add.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_mat_but_add.setText("Add");
        quote_mat_but_add.setToolTipText("");
        quote_mat_but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_mat_but_addActionPerformed(evt);
            }
        });

        quote_mat_but_remove.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_mat_but_remove.setText("Remove");
        quote_mat_but_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_mat_but_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quote_mat_but_change, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_mat_but_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_mat_but_remove, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel34Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(quote_mat_but_add)
                        .addGap(18, 18, 18)
                        .addComponent(quote_mat_but_change)
                        .addGap(18, 18, 18)
                        .addComponent(quote_mat_but_remove))
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quote_TabPane.addTab("Materials", jPanel34);

        jPanel37.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel117.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel117.setText("Overhead");

        quote_over_tf_overhead.setEnabled(false);

        jLabel118.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel118.setText("Total Cost");

        quote_over_but_done.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_over_but_done.setText("Done");
        quote_over_but_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_over_but_doneActionPerformed(evt);
            }
        });

        quote_over_but_cancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_over_but_cancel.setText("Cancel");
        quote_over_but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_over_but_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(quote_over_but_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quote_over_but_done))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel117)
                            .addComponent(jLabel118))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quote_over_tf_overhead, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(quote_over_tf_total))))
                .addGap(22, 22, 22))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel117)
                    .addComponent(quote_over_tf_overhead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel118)
                    .addComponent(quote_over_tf_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quote_over_but_done)
                    .addComponent(quote_over_but_cancel))
                .addGap(28, 28, 28))
        );

        quote_over_li_overheads.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quote_over_li_overheads.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quote_over_li_overheadsMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(quote_over_li_overheads);

        quote_over_but_change.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_over_but_change.setText("Change");
        quote_over_but_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_over_but_changeActionPerformed(evt);
            }
        });

        quote_over_but_add.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_over_but_add.setText("Add");
        quote_over_but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_over_but_addActionPerformed(evt);
            }
        });

        quote_over_but_remove.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_over_but_remove.setText("Remove");
        quote_over_but_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_over_but_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quote_over_but_change, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_over_but_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_over_but_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(quote_over_but_add)
                        .addGap(18, 18, 18)
                        .addComponent(quote_over_but_change)
                        .addGap(18, 18, 18)
                        .addComponent(quote_over_but_remove)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quote_TabPane.addTab("Overheads", jPanel36);

        quote_labour_li_labour.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quote_labour_li_labour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quote_labour_li_labourMouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(quote_labour_li_labour);

        jPanel39.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel119.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel119.setText("Worker");

        jLabel120.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel120.setText("Hours");

        quote_labour_but_done.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_labour_but_done.setText("Done");
        quote_labour_but_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_labour_but_doneActionPerformed(evt);
            }
        });

        quote_labour_but_cancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_labour_but_cancel.setText("Cancel");
        quote_labour_but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_labour_but_cancelActionPerformed(evt);
            }
        });

        quote_labour_combo_workers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Worker", "Stefan", "Andre", "Simeon", "Kobus" }));
        quote_labour_combo_workers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_labour_combo_workersActionPerformed(evt);
            }
        });

        jLabel60.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel60.setText("Rate:");

        quote_labour_l_rate.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_labour_l_rate.setText("(Hourly Rate)");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                        .addComponent(quote_labour_but_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quote_labour_but_done))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel119)
                            .addComponent(jLabel120))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addComponent(quote_labour_spin_hours, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel60)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quote_labour_l_rate))
                            .addComponent(quote_labour_combo_workers, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel119)
                    .addComponent(quote_labour_combo_workers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel120)
                    .addComponent(quote_labour_spin_hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60)
                    .addComponent(quote_labour_l_rate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quote_labour_but_done)
                    .addComponent(quote_labour_but_cancel))
                .addGap(25, 25, 25))
        );

        quote_labour_but_remove.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_labour_but_remove.setText("Remove");
        quote_labour_but_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_labour_but_removeActionPerformed(evt);
            }
        });

        quote_labour_but_change.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_labour_but_change.setText("Change");
        quote_labour_but_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_labour_but_changeActionPerformed(evt);
            }
        });

        quote_labour_but_add.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quote_labour_but_add.setText("Add");
        quote_labour_but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_labour_but_addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quote_labour_but_change, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_labour_but_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_labour_but_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(quote_labour_but_add)
                        .addGap(18, 18, 18)
                        .addComponent(quote_labour_but_change)
                        .addGap(18, 18, 18)
                        .addComponent(quote_labour_but_remove)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quote_TabPane.addTab("Labour", jPanel38);

        jLabel24.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel24.setText("(Quote Date Here)");

        quoteID_l.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        quoteID_l.setText("(Quote ID Here)");

        jLabel32.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel32.setText("Quote Summary");

        quote_but_acc.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        quote_but_acc.setForeground(new java.awt.Color(0, 102, 0));
        quote_but_acc.setText("Accept");
        quote_but_acc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_but_accActionPerformed(evt);
            }
        });

        quote_but_rej.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        quote_but_rej.setForeground(new java.awt.Color(102, 51, 0));
        quote_but_rej.setText("Reject");
        quote_but_rej.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_but_rejActionPerformed(evt);
            }
        });

        quote_but_delete.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        quote_but_delete.setText("Delete");
        quote_but_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quote_but_deleteActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel33.setText("ID:");

        jLabel34.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel34.setText("Date:");

        quote_allquotes_combo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quote_allquotes_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        quote_allquotes_combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                quote_allquotes_comboItemStateChanged(evt);
            }
        });

        selectedQuoteState.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_TabPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(123, 123, 123)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quoteID_l, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(quote_but_create)
                        .addGap(18, 18, 18)
                        .addComponent(quote_but_jobDesc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectedQuoteState, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quote_allquotes_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(quote_but_delete)
                        .addGap(37, 37, 37)
                        .addComponent(quote_but_rej)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quote_but_acc)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quote_but_acc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_but_rej, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_but_create, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quote_but_delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quote_allquotes_combo)
                        .addComponent(quote_but_jobDesc))
                    .addComponent(selectedQuoteState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(quote_TabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quoteID_l)
                    .addComponent(jLabel24)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        jobStatesTabPane.addTab("Quote", jPanel16);

        jPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel68.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel68.setText("Labour:");

        jLabel88.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel88.setText("Overheads:");

        jLabel89.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel89.setText("Materials:");

        work_tf_PCost_mat.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_PCost_mat.setEnabled(false);

        work_tf_PCost_over.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_PCost_over.setEnabled(false);

        work_tf_PCost_labour.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_PCost_labour.setEnabled(false);

        work_tf_PCost_total.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_PCost_total.setEnabled(false);

        jLabel97.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel97.setText("Total");

        work_tf_ACost_mat.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_ACost_mat.setEnabled(false);

        work_tf_ACost_over.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_ACost_over.setEnabled(false);

        work_tf_ACost_labour.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_ACost_labour.setEnabled(false);

        work_tf_Quote_mat.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_Quote_mat.setEnabled(false);

        work_tf_Quote_over.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_Quote_over.setEnabled(false);

        work_tf_Quote_labour.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_Quote_labour.setEnabled(false);

        work_proBar_primary_mat.setBackground(new java.awt.Color(51, 255, 255));
        work_proBar_primary_mat.setToolTipText("");

        work_tf_ACost_total.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_ACost_total.setEnabled(false);

        work_tf_Quote_total.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        work_tf_Quote_total.setEnabled(false);

        work_proBar_primary_over.setBackground(new java.awt.Color(51, 255, 255));
        work_proBar_primary_over.setToolTipText("");

        work_proBar_primary_labour.setBackground(new java.awt.Color(51, 255, 255));
        work_proBar_primary_labour.setToolTipText("");

        work_proBar_primary_total.setBackground(new java.awt.Color(51, 255, 255));
        work_proBar_primary_total.setToolTipText("");

        work_proBar_secondary_over.setForeground(new java.awt.Color(255, 0, 0));

        work_proBar_secondary_labour.setForeground(new java.awt.Color(255, 0, 0));

        work_proBar_secondary_total.setForeground(new java.awt.Color(255, 0, 0));

        work_proBar_secondary_mat.setForeground(new java.awt.Color(255, 0, 0));

        jLabel96.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel96.setText("Actual Cost");

        jLabel98.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel98.setText("Total Quote");

        jLabel93.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel93.setText("Cost Progression");

        jLabel110.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel110.setText("Profit Margin");

        jLabel94.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel94.setText("Planned Cost");

        warningMat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        warningMat.setForeground(new java.awt.Color(255, 0, 0));
        warningMat.setText("!");

        warningOver.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        warningOver.setForeground(new java.awt.Color(255, 0, 0));
        warningOver.setText("!");

        warningLab.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        warningLab.setForeground(new java.awt.Color(255, 0, 0));
        warningLab.setText("!");

        warningTotal.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        warningTotal.setForeground(new java.awt.Color(255, 0, 0));
        warningTotal.setText("!");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel89)
                                    .addComponent(jLabel68)
                                    .addComponent(jLabel97)))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel88)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addComponent(work_tf_ACost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(work_tf_PCost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addComponent(work_tf_ACost_over, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(work_tf_PCost_over, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addComponent(work_tf_ACost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(work_tf_PCost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addComponent(work_tf_ACost_total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(work_tf_PCost_total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel96)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel94)
                                .addGap(65, 65, 65)))
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(work_tf_Quote_mat)
                            .addComponent(work_tf_Quote_over)
                            .addComponent(work_tf_Quote_labour)
                            .addComponent(work_tf_Quote_total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel98)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(work_proBar_primary_mat, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                    .addComponent(work_proBar_primary_over, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(work_proBar_primary_labour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(work_proBar_primary_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addComponent(jLabel93)
                                .addGap(101, 101, 101)))
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(work_proBar_secondary_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(work_proBar_secondary_over, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(work_proBar_secondary_mat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel110, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(work_proBar_secondary_total, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(warningMat)
                                .addComponent(warningOver)
                                .addComponent(warningLab, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(warningTotal, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel96)
                            .addComponent(jLabel98)
                            .addComponent(jLabel93)
                            .addComponent(jLabel110)
                            .addComponent(jLabel94))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(work_proBar_primary_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(work_tf_Quote_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(work_proBar_secondary_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel89)
                                .addComponent(work_tf_ACost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(work_tf_PCost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(warningMat)
                        .addGap(5, 5, 5)))
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(work_tf_ACost_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel88)
                                .addComponent(work_tf_PCost_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(work_tf_Quote_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel27Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(work_proBar_secondary_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(work_proBar_primary_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(warningOver)
                        .addGap(3, 3, 3)))
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(work_tf_Quote_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(work_proBar_secondary_labour, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(work_proBar_primary_labour, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel68)
                                .addComponent(work_tf_ACost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(work_tf_PCost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(warningLab)
                        .addGap(3, 3, 3)))
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(work_proBar_primary_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(work_proBar_secondary_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel97)
                                .addComponent(work_tf_ACost_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(work_tf_Quote_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(work_tf_PCost_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(warningTotal)
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );

        work_TabPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        work_TabPane.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel90.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel90.setText("Item");

        jLabel91.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel91.setText("Cost per Item");

        jLabel92.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel92.setText("Count");

        work_mat_but_done.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_mat_but_done.setText("Done");
        work_mat_but_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_mat_but_doneActionPerformed(evt);
            }
        });

        work_mat_but_cancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_mat_but_cancel.setText("Cancel");
        work_mat_but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_mat_but_cancelActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel92))
                    .addComponent(jLabel90, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel91, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                                .addComponent(work_mat_spin_count, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(work_mat_but_cancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(work_mat_but_done))
                            .addComponent(work_mat_tf_item)
                            .addComponent(work_mat_tf_cost))
                        .addGap(0, 67, Short.MAX_VALUE))
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(work_mat_tf_item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel90))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(work_mat_tf_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel91))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(work_mat_spin_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(work_mat_but_cancel)
                    .addComponent(work_mat_but_done)
                    .addComponent(jLabel92))
                .addContainerGap())
        );

        work_mat_li_materials.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        work_mat_li_materials.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "12_Screws (30)", "10_2x4 Pinewood (100)" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        work_mat_li_materials.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                work_mat_li_materialsMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(work_mat_li_materials);

        work_mat_but_change.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_mat_but_change.setText("Change");
        work_mat_but_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_mat_but_changeActionPerformed(evt);
            }
        });

        work_mat_but_add.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_mat_but_add.setText("Add");
        work_mat_but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_mat_but_addActionPerformed(evt);
            }
        });

        work_mat_but_remove.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_mat_but_remove.setText("Remove");
        work_mat_but_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_mat_but_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(work_mat_but_change, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(work_mat_but_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(work_mat_but_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(work_mat_but_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(work_mat_but_change)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(work_mat_but_remove)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        work_TabPane.addTab("Materials", jPanel18);

        jPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel99.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel99.setText("Overhead");

        jLabel100.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel100.setText("Total Cost");

        work_over_but_done.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_over_but_done.setText("Done");
        work_over_but_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_over_but_doneActionPerformed(evt);
            }
        });

        work_over_but_cancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_over_but_cancel.setText("Cancel");
        work_over_but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_over_but_cancelActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel30Layout.createSequentialGroup()
                            .addComponent(jLabel100)
                            .addGap(18, 18, 18)
                            .addComponent(work_over_tf_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel30Layout.createSequentialGroup()
                            .addComponent(work_over_but_cancel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(work_over_but_done)))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(jLabel99)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox2, 0, 230, Short.MAX_VALUE)
                            .addComponent(work_over_tf_overhead))))
                .addGap(22, 22, 22))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel99)
                    .addComponent(work_over_tf_overhead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(work_over_tf_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel100))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(work_over_but_cancel)
                    .addComponent(work_over_but_done))
                .addContainerGap())
        );

        work_over_li_overheads.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        work_over_li_overheads.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Petrol (200)", "Safeguard of Materials on site (300)", "Trailer Hire (400)" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        work_over_li_overheads.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                work_over_li_overheadsMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(work_over_li_overheads);

        work_over_but_change.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_over_but_change.setText("Change");
        work_over_but_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_over_but_changeActionPerformed(evt);
            }
        });

        work_over_but_add.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_over_but_add.setText("Add");
        work_over_but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_over_but_addActionPerformed(evt);
            }
        });

        work_over_but_remove.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        work_over_but_remove.setText("Remove");
        work_over_but_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_over_but_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(work_over_but_change, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(work_over_but_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(work_over_but_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addComponent(work_over_but_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(work_over_but_change)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(work_over_but_remove)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        work_TabPane.addTab("Overheads", jPanel29);

        work_labour_li_labour.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        work_labour_li_labour.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Stefan (20) x (R100) = (R2000)", "Andre (40) x (R100) = (R4000)", "Simeon (40) x (R 50) = (R2000)" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        work_labour_li_labour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                work_labour_li_labourMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(work_labour_li_labour);

        jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel101.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel101.setText("Worker");

        jLabel102.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel102.setText("Hours");

        jLabel59.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel59.setText("Rate:");

        work_labour_spin_hours.setEnabled(false);

        jComboBox3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");

        jButton4.setText("Done");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel101)
                    .addComponent(jLabel102))
                .addGap(18, 18, 18)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(work_over_tf_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(work_labour_spin_hours, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel101)
                    .addComponent(work_over_tf_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(work_labour_spin_hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59)
                    .addComponent(jLabel102)
                    .addComponent(rateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        work_labour_but_add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        work_labour_but_add.setText("Add");
        work_labour_but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_labour_but_addActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(work_labour_but_add, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(work_labour_but_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        work_TabPane.addTab("Labour", jPanel31);

        jLabel95.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel95.setText("Cost Summary");

        work_but_finaliseJob.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        work_but_finaliseJob.setText("Finalise Job");
        work_but_finaliseJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_but_finaliseJobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(work_TabPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(work_but_finaliseJob))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel95))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(work_but_finaliseJob)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(work_TabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel95)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jobStatesTabPane.addTab("Work", jPanel3);

        final_table_costs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Material", "Screws", "12", "30", "360"},
                {"Material", "2x4 Wood", "4", "100", "400"},
                {"Overhead", "Petrol", "-", "200", "100"},
                {"Labour", "Andrew", "12", "50", "600"}
            },
            new String [] {
                "Type", "Title", "Count/Hours", "Cost/Rate", "Final Cost"
            }
        ));
        jScrollPane2.setViewportView(final_table_costs);

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("View");

        buttonGroup1.add(final_rb_all);
        final_rb_all.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        final_rb_all.setText("All");
        final_rb_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                final_rb_allActionPerformed(evt);
            }
        });

        buttonGroup1.add(final_rb_mat);
        final_rb_mat.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        final_rb_mat.setText("Material");
        final_rb_mat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                final_rb_matActionPerformed(evt);
            }
        });

        buttonGroup1.add(final_rb_over);
        final_rb_over.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        final_rb_over.setText("Overhead");
        final_rb_over.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                final_rb_overActionPerformed(evt);
            }
        });

        buttonGroup1.add(final_rb_lab);
        final_rb_lab.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        final_rb_lab.setText("Labour");
        final_rb_lab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                final_rb_labActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(final_rb_all)
                        .addGap(22, 22, 22)
                        .addComponent(final_rb_mat)
                        .addGap(22, 22, 22)
                        .addComponent(final_rb_over)
                        .addGap(22, 22, 22)
                        .addComponent(final_rb_lab)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(final_rb_all)
                    .addComponent(final_rb_mat)
                    .addComponent(final_rb_over)
                    .addComponent(final_rb_lab)))
        );

        final_but_signOff.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        final_but_signOff.setText("Sign Off Job");
        final_but_signOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                final_but_signOffActionPerformed(evt);
            }
        });

        jLabel136.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel136.setText("Quote");

        final_tf_quote.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_quote.setEnabled(false);

        final_tf_rec.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_rec.setEnabled(false);

        jLabel138.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel138.setText("Recieved");

        final_tf_outst.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_outst.setEnabled(false);

        jLabel139.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel139.setText("Outstanding");

        final_but_managePay.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        final_but_managePay.setText("Manage Payments");
        final_but_managePay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                final_but_managePayActionPerformed(evt);
            }
        });

        jPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel71.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel71.setText("Labour:");

        jLabel103.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel103.setText("Overheads:");

        jLabel104.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel104.setText("Materials:");

        jLabel105.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel105.setText("Total");

        final_tf_ACost_mat.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_ACost_mat.setEnabled(false);

        final_tf_ACost_over.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_ACost_over.setEnabled(false);

        final_tf_ACost_labour.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_ACost_labour.setEnabled(false);

        final_tf_Quote_mat.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_Quote_mat.setEnabled(false);

        final_tf_Quote_over.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_Quote_over.setEnabled(false);

        final_tf_Quote_labour.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_Quote_labour.setEnabled(false);

        final_proBar_primary_mat.setBackground(new java.awt.Color(51, 255, 255));
        final_proBar_primary_mat.setToolTipText("");

        final_tf_ACost_total.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_ACost_total.setEnabled(false);

        final_tf_Quote_total.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_Quote_total.setEnabled(false);

        final_proBar_primary_over.setBackground(new java.awt.Color(51, 255, 255));
        final_proBar_primary_over.setToolTipText("");

        final_proBar_primary_labour.setBackground(new java.awt.Color(51, 255, 255));
        final_proBar_primary_labour.setToolTipText("");

        final_proBar_primary_total.setBackground(new java.awt.Color(51, 255, 255));
        final_proBar_primary_total.setToolTipText("");

        final_proBar_secondary_over.setForeground(new java.awt.Color(255, 0, 0));

        final_proBar_secondary_labour.setForeground(new java.awt.Color(255, 0, 0));

        final_proBar_secondary_total.setForeground(new java.awt.Color(255, 0, 0));

        final_proBar_secondary_mat.setForeground(new java.awt.Color(255, 0, 0));

        jLabel106.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel106.setText("Planned Cost");

        jLabel108.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel108.setText("Total Quote");

        jLabel109.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel109.setText("Cost Progression");

        jLabel111.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel111.setText("Profit Margin");

        jLabel107.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel107.setText("Actual Cost");

        final_tf_PCost_mat.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_PCost_mat.setEnabled(false);

        final_tf_PCost_over.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_PCost_over.setEnabled(false);

        final_tf_PCost_labour.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_PCost_labour.setEnabled(false);

        final_tf_PCost_total.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        final_tf_PCost_total.setEnabled(false);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel104)
                            .addComponent(jLabel71)
                            .addComponent(jLabel105)))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel103)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(final_tf_ACost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(final_tf_PCost_mat))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(final_tf_ACost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(final_tf_PCost_labour))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel32Layout.createSequentialGroup()
                                .addComponent(jLabel107)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel106))
                            .addGroup(jPanel32Layout.createSequentialGroup()
                                .addComponent(final_tf_ACost_over, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(final_tf_PCost_over, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel32Layout.createSequentialGroup()
                                .addComponent(final_tf_ACost_total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(final_tf_PCost_total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(final_tf_Quote_mat)
                        .addComponent(final_tf_Quote_over)
                        .addComponent(final_tf_Quote_labour)
                        .addComponent(final_tf_Quote_total, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel108))
                .addGap(18, 18, 18)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(final_proBar_primary_mat, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(final_proBar_primary_over, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(final_proBar_primary_labour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(final_proBar_primary_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(jLabel109)
                        .addGap(101, 101, 101)))
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(final_proBar_secondary_labour, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(final_proBar_secondary_over, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(final_proBar_secondary_mat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel111, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(final_proBar_secondary_total, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(21, 21, 21))
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel106)
                    .addComponent(jLabel108)
                    .addComponent(jLabel109)
                    .addComponent(jLabel111)
                    .addComponent(jLabel107))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(final_proBar_primary_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(final_tf_Quote_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(final_proBar_secondary_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel104)
                        .addComponent(final_tf_ACost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(final_tf_PCost_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(final_tf_ACost_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel103))
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(final_tf_Quote_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(final_tf_PCost_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel32Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(final_proBar_secondary_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(final_proBar_primary_over, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(final_tf_Quote_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(final_proBar_secondary_labour, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(final_proBar_primary_labour, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel71)
                        .addComponent(final_tf_ACost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(final_tf_PCost_labour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(final_proBar_primary_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(final_proBar_secondary_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel105)
                        .addComponent(final_tf_ACost_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(final_tf_Quote_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(final_tf_PCost_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel136)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(final_tf_quote, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel138)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(final_tf_rec, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel139)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(final_tf_outst, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(final_but_managePay))
                    .addComponent(final_but_signOff, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(final_but_signOff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(final_tf_quote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel136)
                    .addComponent(final_tf_rec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel138)
                    .addComponent(final_tf_outst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel139)
                    .addComponent(final_but_managePay))
                .addGap(21, 21, 21)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        jobStatesTabPane.addTab("Finalise", jPanel4);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Client Email");

        l_email.setText("-");

        l_contactNr.setText("-");

        l_clientFullname.setText("-");

        jLabel7.setText("Client Name");

        jLabel8.setText("Client Number");

        jLabel50.setText("Client Code");

        l_clientCode.setText("-");

        jLabel10.setText("Site Location");

        l_siteLocation.setText("-");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel50)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_clientFullname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_contactNr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_clientCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_siteLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(l_clientCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(l_clientFullname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(l_contactNr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(l_email))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(l_siteLocation))
                .addContainerGap())
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Job Title:");

        l_jobTitle.setText("-");

        jLabel27.setText("Current Cost:");

        jLabel38.setText("Job ID:");

        l_jobID.setText("-");

        jLabel53.setText("Planned Cost:");

        jLabel31.setText("Quote ID:");

        l_quoteID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        l_quoteID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_quoteIDMouseClicked(evt);
            }
        });

        jLabel28.setText("Total Quote:");

        l_quoteState.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        l_quoteState.setText("Quote State");

        l_jobState.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        l_jobState.setText("Job State");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel53)
                    .addComponent(jLabel28)
                    .addComponent(jLabel31))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_currentCost, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(l_plannedCost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addComponent(l_quoteID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(l_totalQuote, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel38))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_jobID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_jobTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(l_jobState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_quoteState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_quoteID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_jobID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_totalQuote, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28)
                        .addComponent(jLabel11)
                        .addComponent(l_jobTitle)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(l_jobState)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(l_quoteState))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_plannedCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(l_currentCost, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        but_close.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        but_close.setText("Return To Main Menu");
        but_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_close)
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jobStatesTabPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jobStatesTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_close)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //initialize GUI components for when a new job is created
    private void initComponentsNewJob() {
        sharedInitializations();
        disableAllButJobsTab(true);
        enableJobCreation(true);
    }

    //do the first initial initialization of GUI components for when you manage a current job
    private void initialLoadComponentsManageJob() {
        sharedInitializations();
        initComponentsManageJob();
    }

    //initialize GUI components for when you manage a current job (not the initial one, as they differ in the following way)
    //the initial loading of components also loads the client combobox fully, which sets the selected client to the first item
    //this should only happen once, when the page is loaded for the first time, which it does. and is found in sharedInitializations()
    private void initComponentsManageJob() {
        disableAllPanels();
        populateClientInfo();
        populateJobInfo();
        initializeJobsPage_Manage();
        initializeQuotePage();
        initializeWorkPage();
        initializeFinalisePage();
        String currentJobStatus = getJobActualQuoteStatus();
        setComboBoxToAcceptedQuote();

    }

    private void setComboBoxToAcceptedQuote() {
        if (!acceptedQuoteID.equals("")) {
            quote_allquotes_combo.setSelectedItem(acceptedQuoteID);
        }
    }

    private void setClientID() {

        if (!currentJobID.equals("")) {

            try {
                Statement st = conn.createStatement();
                String query = "select clientID from jobs where jobID = '" + currentJobID + "'";
                ResultSet rs = st.executeQuery(query);

                while (rs.next()) {
                    currentClientID = rs.getString("clientID");
                    DefiniteCurrentClientID = currentClientID;
                }
            } catch (Exception e) {
                System.out.println("Error in setClientID = " + e);
            }
        }
    }

    private void sharedInitializations() {
        disableAllPanels();
        populateClientCombo();
    }

    private void initializeJobsPage_Manage() {
        enableJobCreation(false);
        selectCorrectClientInJobsPage();
    }

    private void selectCorrectClientInJobsPage() {
        try {
            Statement st = conn.createStatement();
            String query = "select fname,clientID from client where clientID = '" + currentClientID + "'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String item = rs.getString("fname") + " " + rs.getString("ClientID");
                job_cb_selectClient.setSelectedItem(item);
            }
        } catch (Exception e) {
            System.out.println("Error in selectCorrectClientInJobsPage = " + e);
        }
    }

    private void enableJobCreation(boolean a) {
        job_but_createJob.setEnabled(a);
        job_cb_selectClient.setEnabled(a);

        job_but_changeDetails.setEnabled(!a);
        job_but_createQuote.setEnabled(!a);
    }

    private void initializeQuotePage() {

        //Initialize the GUI components used
        boolean hasQuote = getAllQuotes();
        if (hasQuote) {
            //has at least one quote from the query search
            //only if has quote, do the next couple of methods

            populateStaffCombo();
            getWorkerRate();
            quote_allquotes_combo.setEnabled(true);
            quote_allquotes_combo.setSelectedIndex(0);
            quoteComboBoxItemSelected();

            //populate 
            populateMaterials();
            populateOverheads();
            populateLabour();

            //calculate
            populateAllTotals();

            //set quote ID textfield
            quoteID_l.setText(currentQuoteID);

            enableQuoteComponents(true);

            //validate the selected quote status.
            validateSelectedQuoteStatus();

        } else {
            //has no queary result when trying to find a quote for the Job

            DefaultComboBoxModel b = new DefaultComboBoxModel();
            b.addElement("Please create a New Quote");
            quote_allquotes_combo.setModel(b);
            quote_allquotes_combo.setEnabled(false);
            selectedQuoteState.setText("");
        }

        //after initializing the page, the job state is verified and updated based on all of the current quotes.
        updateRealJobQuoteState();
        updateQuoteLabels();
    }

    private void initializeWorkPage() {
        //the pages past the quote page should be on lockdown if there is no quote accepted
        //the String value acceptedQuoteID is updated at the end of initializeQuotePage
        if (!acceptedQuoteID.equals("")) {
            jobStatesTabPane.setEnabledAt(2, true);
            jobStatesTabPane.setEnabledAt(3, true);
            warningLab.setVisible(false);
            warningOver.setVisible(false);
            warningMat.setVisible(false);
            warningTotal.setVisible(false);
            populateMaterialExpenses();
            populateOverheadExpenses();
            populateLabourExpenses();
            calculateAllExpenses();
            populateTotalsOnWorkPage();
            //populate the bars
            populateAllBars();
            populateFromQuoteCombos();
        } else {
            jobStatesTabPane.setEnabledAt(2, false);
            jobStatesTabPane.setEnabledAt(3, false);
        }
    }

    private void initializeFinalisePage() {
        getContingenciesAndCharges(acceptedQuoteID);
        calculateAllExpensesOnFinalise();
        populateTotalsOnFinalisePage();
        calculateAllProgressionsOnFinalise();
        populateExpensesTable();
        getReceivedFromDB();
        getQuoteTotalFromDB();
        calculateOutstanding();
    }

    //Methods
    //enable...disable panel methods
    private void disableAllPanels() {
        enablePanelJob(false);
        enablePanelQuoteLabour(false);
        enablePanelQuoteMat(false);
        enablePanelQuoteOver(false);
        enablePanelWorkMat(false);
        enablePanelWorkOver(false);
        enableQuoteComponents(false);
    }

    private void disableAllButJobsTab(boolean a) {
        jobStatesTabPane.setEnabledAt(0, a);
        jobStatesTabPane.setEnabledAt(1, !a);
        jobStatesTabPane.setEnabledAt(2, !a);
        jobStatesTabPane.setEnabledAt(3, !a);
    }

    private void disableAllTabs(boolean a) {
        jobStatesTabPane.setEnabledAt(0, a);
        jobStatesTabPane.setEnabledAt(1, a);
        jobStatesTabPane.setEnabledAt(2, a);
        jobStatesTabPane.setEnabledAt(3, a);
    }

    private void enablePanelJob(boolean a) {
        job_tf_title.setEnabled(a);
        job_ta_comments.setEnabled(a);
        job_but_done.setEnabled(a);
        job_but_cancel.setEnabled(a);
        job_but_insertAdr.setEnabled(a);
        job_spin_date.setEnabled(a);
        job_ta_specification.setEnabled(a);

        job_cb_selectClient.setEnabled(!a);
        job_but_changeDetails.setEnabled(!a);
        job_but_createJob.setEnabled(!a);
        job_but_createQuote.setEnabled(!a);

        but_close.setEnabled(!a);
        disableAllTabs(!a);
    }

    private void enablePanelJob_noDate(boolean a) {
        enablePanelJob(a);
        job_spin_date.setEnabled(!a);
    }

    private void enablePanelQuoteMat(boolean a) {
        enableQuoteComponents(!a);
        disableAllTabs(!a);

        //create new quote button
        quote_but_create.setEnabled(!a);

        quote_mat_tf_item.setEnabled(a);
        quote_mat_tf_cost.setEnabled(a);
        quote_mat_spin_count.setEnabled(a);
        quote_mat_but_cancel.setEnabled(a);
        quote_mat_but_done.setEnabled(a);

    }

    private void enablePanelQuoteOver(boolean a) {
        enableQuoteComponents(!a);
        disableAllTabs(!a);

        //create new quote button
        quote_but_create.setEnabled(!a);

        quote_over_tf_total.setEnabled(a);
        quote_over_tf_overhead.setEnabled(a);
        quote_over_but_cancel.setEnabled(a);
        quote_over_but_done.setEnabled(a);
    }

    private void enablePanelQuoteLabour(boolean a) {
        enableQuoteComponents(!a);
        disableAllTabs(!a);

        //create new quote button
        quote_but_create.setEnabled(!a);

        quote_labour_spin_hours.setEnabled(a);
        quote_labour_combo_workers.setEnabled(a);
        quote_labour_but_cancel.setEnabled(a);
        quote_labour_but_done.setEnabled(a);
    }

    private void enableQuoteComponents(boolean a) {
        //top area
        quote_allquotes_combo.setEnabled(a);
        quote_but_acc.setEnabled(a);
        quote_but_rej.setEnabled(a);
        quote_but_delete.setEnabled(a);

        //materials pane
        quote_TabPane.setEnabledAt(0, a);
        quote_mat_li_materials.setEnabled(a);
        //materials pane components
        quote_mat_but_add.setEnabled(a);
        quote_mat_but_remove.setEnabled(a);
        quote_mat_but_change.setEnabled(a);

        //overheads pane
        quote_TabPane.setEnabledAt(1, a);
        quote_over_li_overheads.setEnabled(a);
        //overheads pane components
        quote_over_but_add.setEnabled(a);
        quote_over_but_remove.setEnabled(a);
        quote_over_but_change.setEnabled(a);

        //labour pane
        quote_TabPane.setEnabledAt(2, a);
        quote_labour_li_labour.setEnabled(a);
        //labour pane components
        quote_labour_but_add.setEnabled(a);
        quote_labour_but_remove.setEnabled(a);
        quote_labour_but_change.setEnabled(a);

        //quote summary components 
        quote_spin_cont_mat.setEnabled(a);
        quote_spin_cont_over.setEnabled(a);
        quote_spin_cont_labour.setEnabled(a);
        quote_spin_charge_mat.setEnabled(a);
        quote_spin_charge_over.setEnabled(a);
        quote_spin_charge_labour.setEnabled(a);
        quote_but_resetCharges.setEnabled(a);

        //xtra components
        but_close.setEnabled(a);
    }

    private void enablePanelWorkMain(boolean a) {
        disableAllTabs(!a);
        work_but_finaliseJob.setEnabled(!a);
        but_close.setEnabled(!a);
        work_TabPane.setEnabledAt(0, !a);
        work_TabPane.setEnabledAt(1, !a);
        work_TabPane.setEnabledAt(2, !a);
    }

    private void enablePanelWorkMat(boolean a) {
        enablePanelWorkMain(a);
        work_mat_but_add.setEnabled(!a);
        work_mat_but_change.setEnabled(!a);
        work_mat_but_remove.setEnabled(!a);
        work_mat_li_materials.setEnabled(!a);

        work_mat_tf_item.setEnabled(a);
        work_mat_tf_cost.setEnabled(a);
        work_mat_spin_count.setEnabled(a);
        work_mat_but_done.setEnabled(a);
        work_mat_but_cancel.setEnabled(a);
    }

    private void enablePanelWorkOver(boolean a) {
        enablePanelWorkMain(a);
        work_over_but_add.setEnabled(!a);
        work_over_but_change.setEnabled(!a);
        work_over_but_remove.setEnabled(!a);
        work_over_li_overheads.setEnabled(!a);

        work_over_tf_cost.setEnabled(a);
        work_over_tf_overhead.setEnabled(a);

        work_over_but_done.setEnabled(a);
        work_over_but_cancel.setEnabled(a);
    }

    //other methods
    void fromQuoteJFrameCall(String a) {
        GUI_fromQuote fromQuoteGUI = new GUI_fromQuote(a);
        fromQuoteGUI.setVisible(true);
    }

    //action performed listeners
    private void job_but_createJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_but_createJobActionPerformed
        enablePanelJob(true);
        addOrChange = "add";
    }//GEN-LAST:event_job_but_createJobActionPerformed

    private void job_but_createQuoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_but_createQuoteActionPerformed
        jobStatesTabPane.setSelectedIndex(1);
//        populateMaterials();
//        populateOverheads();
//        populateLabour();
//        populateAllTotals();
    }//GEN-LAST:event_job_but_createQuoteActionPerformed

    private void job_but_changeDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_but_changeDetailsActionPerformed
        enablePanelJob_noDate(true);
        addOrChange = "change";
    }//GEN-LAST:event_job_but_changeDetailsActionPerformed

    private void job_but_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_but_doneActionPerformed

        String selectedClient[] = job_cb_selectClient.getSelectedItem().toString().split(" ");
        currentClientID = selectedClient[1];

        if (addOrChange.equals("add")) {
            addNewJob();
            initComponentsManageJob();
        }
        if (addOrChange.equals("change")) {
            //The Job should be changed
            //write a change Method
            System.out.println("Please write a change job method here");
            initComponentsManageJob();
        }

    }//GEN-LAST:event_job_but_doneActionPerformed

    private void but_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_but_closeActionPerformed

    private void job_but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_but_cancelActionPerformed
        refreshGUI();
    }//GEN-LAST:event_job_but_cancelActionPerformed

    private void quote_mat_but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_mat_but_addActionPerformed
        addOrChange = "add";

        quote_mat_tf_item.setText("");
        quote_mat_tf_cost.setText("");
        quote_mat_spin_count.setValue(0);

        enablePanelQuoteMat(true);
    }//GEN-LAST:event_quote_mat_but_addActionPerformed

    private void quote_mat_but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_mat_but_cancelActionPerformed
        enablePanelQuoteMat(false);
    }//GEN-LAST:event_quote_mat_but_cancelActionPerformed

    private void quote_mat_but_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_mat_but_doneActionPerformed

        if (addOrChange.equals("change")) {
            try {
                String selectedItem[] = quote_mat_li_materials.getSelectedValue().toString().split("#");
                selectedItemCode = selectedItem[1].toString();

                String sql = "Update quoteitem set QuoteTitle=?, Count_Hours=?, Cost_Rate=? Where QuoteItemCode =?";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.setString(1, quote_mat_tf_item.getText().toString());
                statement.setInt(2, Integer.parseInt(quote_mat_spin_count.getModel().getValue().toString()));
                statement.setInt(3, Integer.parseInt(quote_mat_tf_cost.getText()));
                statement.setString(4, selectedItemCode);
                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with modifying quoteItem Material : " + e);
            }
        } else if (addOrChange.equals("add")) {
            try {
                String sql = "Insert into quoteitem(QuoteItemCode,QuoteID,QuoteTitle, QuoteType, Count_Hours, Cost_Rate) values(?,?,?,?,?,?)";
                PreparedStatement statement = conn.prepareStatement(sql);
                Random rand = new Random();
                statement.setInt(1, rand.nextInt(100000));
                statement.setString(2, currentQuoteID);
                statement.setString(3, quote_mat_tf_item.getText());
                statement.setString(4, "Material");
                statement.setInt(5, Integer.parseInt(quote_mat_spin_count.getValue().toString()));
                statement.setInt(6, Integer.parseInt(quote_mat_tf_cost.getText().toString()));
                System.out.println(statement);
                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with adding quoteItem Material : " + e);
            }

        }
        populateMaterials();
        populateAllTotals();
        calculateQuoteCharges();
        clearQuoteItemInsertionFields();

        addOrChange = "x";
        enablePanelQuoteMat(false);

    }//GEN-LAST:event_quote_mat_but_doneActionPerformed

    private void quote_mat_but_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_mat_but_changeActionPerformed
        addOrChange = "change";
        enablePanelQuoteMat(true);
    }//GEN-LAST:event_quote_mat_but_changeActionPerformed

    private void quote_over_but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_over_but_addActionPerformed
        addOrChange = "add";

        quote_over_tf_overhead.setText("");
        quote_over_tf_total.setText("");

        enablePanelQuoteOver(true);
    }//GEN-LAST:event_quote_over_but_addActionPerformed

    private void quote_over_but_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_over_but_changeActionPerformed
        addOrChange = "change";
        enablePanelQuoteOver(true);
    }//GEN-LAST:event_quote_over_but_changeActionPerformed

    private void quote_over_but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_over_but_cancelActionPerformed
        enablePanelQuoteOver(false);
    }//GEN-LAST:event_quote_over_but_cancelActionPerformed

    private void quote_over_but_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_over_but_doneActionPerformed

        if (addOrChange.equals("add")) {
            try {
                String sql = "Insert into quoteitem(QuoteItemCode,QuoteID,QuoteTitle, QuoteType, Count_Hours, Cost_Rate) values(?,?,?,?,?,?)";
                PreparedStatement statement = conn.prepareStatement(sql);
                Random rand = new Random();
                statement.setInt(1, rand.nextInt(100000));
                statement.setString(2, currentQuoteID);
                statement.setString(3, quote_over_tf_overhead.getText());
                statement.setString(4, "Overheads");
                statement.setInt(5, 1);
                statement.setInt(6, Integer.parseInt(quote_over_tf_total.getText().toString()));
                statement.executeUpdate();

            } catch (Exception e) {
                System.out.println("Problem with adding quoteItem Overhead : " + e);
            }

        } else if (addOrChange.equals("change")) {
            try {
                String selectedItem[] = quote_over_li_overheads.getSelectedValue().toString().split("#");
                String selectedItemCode = selectedItem[1];

                String sql = "Update quoteitem set QuoteTitle=?, Count_Hours=?, Cost_Rate=? Where QuoteItemCode =?";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.setString(1, quote_over_tf_overhead.getText());
                statement.setInt(2, 1);
                statement.setInt(3, Integer.parseInt(quote_over_tf_total.getText().toString()));
                statement.setString(4, selectedItemCode);
                statement.executeUpdate();

            } catch (Exception e) {
                System.out.println("Problem with Changing quoteItem Labour : " + e);
            }
        }

        populateOverheads();
        populateAllTotals();
        calculateQuoteCharges();
        clearQuoteItemInsertionFields();

        addOrChange = "x";
        enablePanelQuoteOver(false);
    }//GEN-LAST:event_quote_over_but_doneActionPerformed

    private void quote_labour_but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_labour_but_addActionPerformed
        addOrChange = "add";

        quote_labour_combo_workers.setSelectedIndex(1);
        quote_labour_spin_hours.setValue(0);

        enablePanelQuoteLabour(true);
    }//GEN-LAST:event_quote_labour_but_addActionPerformed

    private void quote_labour_but_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_labour_but_changeActionPerformed
        addOrChange = "change";
        enablePanelQuoteLabour(true);
    }//GEN-LAST:event_quote_labour_but_changeActionPerformed

    private void quote_labour_but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_labour_but_cancelActionPerformed
        enablePanelQuoteLabour(false);
    }//GEN-LAST:event_quote_labour_but_cancelActionPerformed

    private void quote_labour_but_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_labour_but_doneActionPerformed

        if (addOrChange.equals("add")) {
            try {

                String sql = "Insert into quoteitem(QuoteItemCode,QuoteID,QuoteTitle, QuoteType, Count_Hours, Cost_Rate) values(?,?,?,?,?,?)";
                PreparedStatement statement = conn.prepareStatement(sql);
                Random rand = new Random();
                statement.setInt(1, rand.nextInt(100000));
                statement.setString(2, currentQuoteID);
                statement.setString(3, quote_labour_combo_workers.getModel().getSelectedItem().toString());
                statement.setString(4, "Labour");
                statement.setInt(5, Integer.parseInt(quote_labour_spin_hours.getValue().toString()));
                statement.setInt(6, Integer.parseInt(quote_labour_l_rate.getText()));
                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with adding quoteItem Labour : " + e);
            }
        } else if (addOrChange.equals("change")) {
            try {
                String selectedItem[] = quote_labour_li_labour.getSelectedValue().toString().split("#");
                String selectedItemCode = selectedItem[1];

                String sql = "Update quoteitem set QuoteTitle=?, Count_Hours=?, Cost_Rate=? Where QuoteItemCode =?";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.setString(1, quote_labour_combo_workers.getModel().getSelectedItem().toString());
                statement.setInt(2, Integer.parseInt(quote_labour_spin_hours.getValue().toString()));
                statement.setInt(3, Integer.parseInt(quote_labour_l_rate.getText()));
                statement.setString(4, selectedItemCode);

                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with Changing quoteItem Labour : " + e);
            }
        }
        populateLabour();
        populateAllTotals();
        calculateQuoteCharges();
        clearQuoteItemInsertionFields();

        addOrChange = "x";
        enablePanelQuoteLabour(false);
    }//GEN-LAST:event_quote_labour_but_doneActionPerformed

    private void quote_but_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_but_createActionPerformed

        String code = "";
        try {
            String sql = "Insert into quote(QuoteID,JobID,QuoteStatus,MaterialCont,OverheadCont,LabourCont,MaterialCharge,OverheadCharge,LabourCharge) values(?,?,?,?,?,?,?,?,?)";
            PreparedStatement statement = conn.prepareStatement(sql);
            boolean goahead = false;

            while (goahead == false) {
                Random rand = new Random();
                code = Integer.toString(rand.nextInt(100000));
                code = "Q" + code;

                String sql2 = "Select * from quote";
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql2);

                while (rs.next()) {
                    if (rs.getString("quoteID") != code) {
                        goahead = true;
                    } else {
                    }
                }
            }

            if (goahead == true) {
                statement.setString(1, code);
                statement.setString(2, currentJobID);
                statement.setString(3, "Quote in Progress");
                statement.setInt(4, 0);// material contingency
                statement.setInt(5, 0);//  overhead contingency
                statement.setInt(6, 0);//   labour contingency
                statement.setInt(7, 0);// material charge
                statement.setInt(8, 0);//  overhead charge
                statement.setInt(9, 0);//   labour charge
                statement.executeUpdate();
            }

        } catch (Exception e) {
            System.out.println("Problem with adding quote : " + e);
        }

        initializeQuotePage();
        quote_allquotes_combo.setSelectedItem(code);
    }//GEN-LAST:event_quote_but_createActionPerformed

    private void quote_but_rejActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_but_rejActionPerformed
        //1.reject the current selected quote
        //2.update the job state. (done inside of initializeQuotePage())

        if (okcancel("Are you sure you want to reject quote: " + currentQuoteID + "?")) {
            try {
                String sql = "update quote set quoteStatus = 'Rejected'  where QuoteID = '" + currentQuoteID + "' ";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.executeUpdate();
                JOptionPane.showMessageDialog(this, "You have rejected quote: " + currentQuoteID);

                if (currentQuoteID.equals(acceptedQuoteID)) {
                    acceptedQuoteID = "";
                }

            } catch (Exception e) {
                System.out.println("myerror" + e);
            }

            initComponentsManageJob();
        }
    }//GEN-LAST:event_quote_but_rejActionPerformed

    private void quote_but_accActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_but_accActionPerformed

        //1.Reject any other quote that might be accepted
        //2.accept current quote
        //2.update the job state. (done inside of initializeQuotePage())
        //
        if (okcancel("By accepting this quote (" + currentQuoteID + ")\nAll other accepted quotes for this Job will be rejected")) {

            //get the current status
            String currentJobStatus = getJobActualQuoteStatus();

            //if the status is accepted (meaning there is already an accepted quote),
            //then make that accepted quote rejected
            if (currentJobStatus.equals("Accepted")) {
                try {
                    String sql1 = "update quote set quoteStatus = 'Rejected'  where quoteStatus = 'Accepted' and JobID = '" + currentJobID + "'";
                    PreparedStatement statement1 = conn.prepareStatement(sql1);
                    statement1.executeUpdate();
                } catch (Exception e) {
                    System.out.println("Error in quote_but_accActionPerformed \n Was trying to reject an accepted quote\n error= " + e);
                }
            }

            //make the current Quote the accepted one
            try {
                String sql2 = "update quote set quoteStatus = 'Accepted'  where QuoteID = '" + currentQuoteID + "'";
                PreparedStatement statement2 = conn.prepareStatement(sql2);
                statement2.executeUpdate();
                acceptedQuoteID = currentQuoteID;
                JOptionPane.showMessageDialog(this, "You have Accepted quote: " + currentQuoteID);
            } catch (Exception e) {
                System.out.println("Error in quote_but_accActionPerformed \n Was trying to accept the current quote\n error= " + e);
            }

            initComponentsManageJob();
            populateTotalsOnWorkPage();
            populateFromQuoteCombos();
            setComboBoxToAcceptedQuote();
        }
    }//GEN-LAST:event_quote_but_accActionPerformed

    private void quote_but_jobDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_but_jobDescActionPerformed
        String desc = "none";
        try {
            String q = "Select * from Jobs where jobID = '" + currentJobID + "'";
            PreparedStatement statement = conn.prepareStatement(q);
            rs = statement.executeQuery();
            while (rs.next()) {
                desc = rs.getString("jobDes");
            }
        } catch (Exception e) {
            System.out.println("error when displaying job with description" + e);
        }
        GUI_JobDescription jobDescGUI = new GUI_JobDescription(desc);
        jobDescGUI.setVisible(true);
    }//GEN-LAST:event_quote_but_jobDescActionPerformed

    private void work_mat_but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_mat_but_addActionPerformed
        enablePanelWorkMat(true);
        addOrChange = "add";
    }//GEN-LAST:event_work_mat_but_addActionPerformed

    private void work_mat_but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_mat_but_cancelActionPerformed
        enablePanelWorkMat(false);
    }//GEN-LAST:event_work_mat_but_cancelActionPerformed

    private void work_mat_but_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_mat_but_doneActionPerformed
        if (addOrChange.equals("change")) {
            try {
                String sql = "Update WorkingExpense set ExpenseTitle=?, Count_Hours=?, Cost_Rate=? where WorkingExpenseID = ?";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.setString(1, work_mat_tf_item.getText().toString());
                statement.setInt(2, Integer.parseInt(work_mat_spin_count.getModel().getValue().toString()));
                statement.setInt(3, Integer.parseInt(work_mat_tf_cost.getText()));
                String id[] = work_mat_li_materials.getSelectedValue().split("#");
                statement.setInt(4, Integer.parseInt(id[1]));

                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with modifying workingexpense Material : " + e);
            }
            populateMaterials();
            populateAllTotals();
        } else if (addOrChange.equals("add")) {
            try {
                String sql = "Insert into WorkingExpense(WorkingExpenseID, jobID,ExpenseTitle, ExpenseType, Count_Hours, Cost_Rate) values(?,?,?,?,?,?)";
                PreparedStatement statement = conn.prepareStatement(sql);
                Random rand = new Random();
                statement.setInt(1, rand.nextInt(100000));
                statement.setString(2, currentJobID);
                statement.setString(3, work_mat_tf_item.getText());
                statement.setString(4, "Material");
                statement.setInt(5, Integer.parseInt(work_mat_spin_count.getValue().toString()));
                statement.setInt(6, Integer.parseInt(work_mat_tf_cost.getText().toString()));
                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with adding quoteItem Material : " + e);
                System.out.println("currentjobID " + work_mat_tf_cost.getText().toString());
            }
        }
        addOrChange = "x";

        //calculate the actual costs
        populateMaterialExpenses();
        calculateAllExpenses();

        //populate the bars
        populateAllBars();
        enablePanelWorkMat(false);
    }//GEN-LAST:event_work_mat_but_doneActionPerformed

    private void work_mat_but_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_mat_but_changeActionPerformed
        enablePanelWorkMat(true);
        addOrChange = "change";
    }//GEN-LAST:event_work_mat_but_changeActionPerformed

    private void work_over_but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_over_but_addActionPerformed
        addOrChange = "add";
        enablePanelWorkOver(true);
    }//GEN-LAST:event_work_over_but_addActionPerformed

    private void work_over_but_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_over_but_changeActionPerformed
        addOrChange = "change";
        enablePanelWorkOver(true);
    }//GEN-LAST:event_work_over_but_changeActionPerformed

    private void work_labour_but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_labour_but_addActionPerformed
        addOrChange = "add";
//        GUI_jobLog jobLogsGUI = new GUI_jobLog();
        //  jobLogsGUI.setVisible(true);
        populateLabourExpenses();
        work_over_tf_labour.setEnabled(true);
        work_labour_spin_hours.setEnabled(true);

    }//GEN-LAST:event_work_labour_but_addActionPerformed

    private void work_over_but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_over_but_cancelActionPerformed
        enablePanelWorkOver(false);
    }//GEN-LAST:event_work_over_but_cancelActionPerformed

    private void work_over_but_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_over_but_doneActionPerformed
        if (addOrChange.equals("change")) {
            try {
                String sql = "Update WorkingExpense set ExpenseTitle=?, Count_Hours=?, Cost_Rate=? where WorkingExpenseID = ?";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.setString(1, work_over_tf_overhead.getText().toString());
                statement.setInt(2, 1);
                statement.setInt(3, Integer.parseInt(work_over_tf_cost.getText()));
                String id[] = work_over_li_overheads.getSelectedValue().split("#");
                statement.setInt(4, Integer.parseInt(id[1]));

                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with modifying workingexpense Overheads : " + e);
            }
            populateOverheads();
            populateAllTotals();
        } else if (addOrChange.equals("add")) {
            try {
                String sql = "Insert into WorkingExpense(WorkingExpenseID, jobID,ExpenseTitle, ExpenseType, Count_Hours, Cost_Rate) values(?,?,?,?,?,?)";
                PreparedStatement statement = conn.prepareStatement(sql);
                Random rand = new Random();
                statement.setInt(1, rand.nextInt(100000));
                statement.setString(2, currentJobID);
                statement.setString(3, work_over_tf_overhead.getText());
                statement.setString(4, "Overheads");
                statement.setInt(5, 1);
                statement.setInt(6, Integer.parseInt(work_over_tf_cost.getText().toString()));
                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with adding quoteItem Material : " + e);
                System.out.println("currentjobID " + work_mat_tf_cost.getText().toString());
            }
        }
        addOrChange = "x";
        populateOverheadExpenses();
        calculateAllExpenses();
        //populate the bars
        populateAllBars();
        enablePanelWorkOver(false);
    }//GEN-LAST:event_work_over_but_doneActionPerformed

    private void work_but_finaliseJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_but_finaliseJobActionPerformed
        jobStatesTabPane.setSelectedIndex(3);
        l_quoteState.setText("Payment Pending");
        initializeFinalisePage();
    }//GEN-LAST:event_work_but_finaliseJobActionPerformed

    private void final_but_signOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_final_but_signOffActionPerformed
        JOptionPane.showMessageDialog(rootPane, "This Job is now closed");
        this.dispose();
    }//GEN-LAST:event_final_but_signOffActionPerformed

    private void job_but_insertAdrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_but_insertAdrActionPerformed
        AddressPane ap = new AddressPane(job_tf_siteLocation);
    }//GEN-LAST:event_job_but_insertAdrActionPerformed

    private void final_but_managePayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_final_but_managePayActionPerformed
        //GUI_managePayment payGUI = new GUI_managePayment();
        // payGUI.setVisible(true);
        Double paidAmount = Double.parseDouble(JOptionPane.showInputDialog("How much have you received from the client"));
        try {
            String sql = "Insert into Payment(JobID, PaidAmount) values(?,?)";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, this.currentJobID);
            statement.setDouble(2, paidAmount);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with adding a payment" + e);
        }

        this.getReceivedFromDB();
        calculateOutstanding();
    }//GEN-LAST:event_final_but_managePayActionPerformed

    private void quote_TabPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quote_TabPaneMouseClicked
    }//GEN-LAST:event_quote_TabPaneMouseClicked

    private void quote_labour_combo_workersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_labour_combo_workersActionPerformed
        getWorkerRate();
    }//GEN-LAST:event_quote_labour_combo_workersActionPerformed

    private void quote_mat_but_doneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quote_mat_but_doneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_quote_mat_but_doneMouseClicked

    private void quote_mat_but_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_mat_but_removeActionPerformed
        String selectedItem[] = quote_mat_li_materials.getSelectedValue().toString().split("#");
        String selectedItemCode = selectedItem[1];

        try {
            String sql = "Delete from quoteitem where QuoteItemCode = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, selectedItemCode);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with deleteing Material : " + e);
        }
        populateMaterials();
        populateAllTotals();
        calculateQuoteCharges();
        clearQuoteItemInsertionFields();
    }//GEN-LAST:event_quote_mat_but_removeActionPerformed

    private void quote_over_but_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_over_but_removeActionPerformed
        String selectedItem[] = quote_over_li_overheads.getSelectedValue().toString().split("#");
        String selectedItemCode = selectedItem[1];

        try {
            String sql = "Delete from quoteitem where QuoteItemCode = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, selectedItemCode);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with deleteing Overhead : " + e);
        }
        populateOverheads();
        populateAllTotals();
        calculateQuoteCharges();
        clearQuoteItemInsertionFields();
    }//GEN-LAST:event_quote_over_but_removeActionPerformed

    private void quote_labour_but_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_labour_but_removeActionPerformed
        String selectedItem[] = quote_labour_li_labour.getSelectedValue().toString().split("#");
        String selectedItemCode = selectedItem[1];

        try {
            String sql = "Delete from quoteitem where QuoteItemCode = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, selectedItemCode);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with deleteing Labour : " + e);
        }
        populateLabour();
        populateAllTotals();
        calculateQuoteCharges();
        clearQuoteItemInsertionFields();
    }//GEN-LAST:event_quote_labour_but_removeActionPerformed

    private void quote_but_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_but_deleteActionPerformed
        String quoteID = quote_allquotes_combo.getModel().getSelectedItem().toString();
        try {
            String sql = "Delete from quote where QuoteID = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, quoteID);
            statement.executeUpdate();
            System.out.println("The quote " + quoteID + " is now deleted.");
        } catch (Exception e) {
            System.out.println("Problem with deleteing quote : " + e);
        }
        initComponentsManageJob();
    }//GEN-LAST:event_quote_but_deleteActionPerformed

    private void quote_spin_cont_matStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quote_spin_cont_matStateChanged
        calculateAndCaptureQuoteCharges();
    }//GEN-LAST:event_quote_spin_cont_matStateChanged

    private void quote_spin_charge_matStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quote_spin_charge_matStateChanged
        calculateAndCaptureQuoteCharges();
    }//GEN-LAST:event_quote_spin_charge_matStateChanged

    private void quote_spin_cont_overStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quote_spin_cont_overStateChanged
        calculateAndCaptureQuoteCharges();
    }//GEN-LAST:event_quote_spin_cont_overStateChanged

    private void quote_spin_charge_overStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quote_spin_charge_overStateChanged
        calculateAndCaptureQuoteCharges();
    }//GEN-LAST:event_quote_spin_charge_overStateChanged

    private void quote_spin_cont_labourStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quote_spin_cont_labourStateChanged
        calculateAndCaptureQuoteCharges();
    }//GEN-LAST:event_quote_spin_cont_labourStateChanged

    private void quote_spin_charge_labourStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quote_spin_charge_labourStateChanged
        calculateAndCaptureQuoteCharges();
    }//GEN-LAST:event_quote_spin_charge_labourStateChanged

    private void work_mat_but_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_mat_but_removeActionPerformed
        String quoteItemCode[] = work_mat_li_materials.getSelectedValue().toString().split("#");
        try {
            String sql = "Delete from WorkingExpense where WorkingExpenseID = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, quoteItemCode[1]);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with deleteing Material : " + e);
        }
        calculateAllExpenses();
        populateTotalsOnWorkPage();
        //populate the bars
        populateAllBars();
        populateMaterialExpenses();

    }//GEN-LAST:event_work_mat_but_removeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String item[] = (jComboBox1.getSelectedItem().toString()).split("_");
        work_mat_tf_item.setText(item[0]);
        String costWithRand[] = item[1].split("R");
        work_mat_tf_cost.setText(costWithRand[1]);
        String quantityWithDesc[] = item[2].split(":");
        work_mat_spin_count.setValue(Integer.parseInt(quantityWithDesc[1]));
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String item[] = (jComboBox2.getSelectedItem().toString()).split("_");
        work_over_tf_overhead.setText(item[0]);
        String costWithRand[] = item[1].split("R");
        work_over_tf_cost.setText(costWithRand[1]);
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        String item[] = (jComboBox3.getSelectedItem().toString()).split("_");
        work_over_tf_labour.setText(item[0] + " " + item[1]);
        String costWithRand[] = item[2].split("R");
        rateSpinner.setValue(Integer.parseInt(costWithRand[1]));
        String quantityWithDesc[] = item[3].split(":");
        work_labour_spin_hours.setValue(Integer.parseInt(quantityWithDesc[1]));
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void work_over_but_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_over_but_removeActionPerformed
        String quoteItemCode[] = work_over_li_overheads.getSelectedValue().toString().split("#");
        try {
            String sql = "Delete from WorkingExpense where WorkingExpenseID = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, quoteItemCode[1]);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with deleteing overhead on work page : " + e);
        }
        calculateAllExpenses();
        populateTotalsOnWorkPage();
        //populate the bars
        populateAllBars();
        populateOverheadExpenses();
    }//GEN-LAST:event_work_over_but_removeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addOrChange = "change";
        populateLabourExpenses();
        work_over_tf_labour.setEnabled(true);
        work_labour_spin_hours.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String quoteItemCode[] = work_labour_li_labour.getSelectedValue().toString().split("#");
        try {
            String sql = "Delete from WorkingExpense where WorkingExpenseID = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, quoteItemCode[1]);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with deleteing labour on work page : " + e);
        }
        calculateAllExpenses();
        populateTotalsOnWorkPage();
        //populate the bars
        populateAllBars();
        populateLabourExpenses();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (addOrChange.equals("change")) {
            try {
                String sql = "Update WorkingExpense set ExpenseTitle=?, Count_Hours=?, Cost_Rate=? where WorkingExpenseID = ?";
                PreparedStatement statement = conn.prepareStatement(sql);
                statement.setString(1, work_over_tf_labour.getText().toString());
                statement.setInt(2, Integer.parseInt(work_labour_spin_hours.getValue().toString()));

                statement.setInt(3, Integer.parseInt(rateSpinner.getValue().toString()));
                String id[] = work_labour_li_labour.getSelectedValue().split("#");
                statement.setInt(4, Integer.parseInt(id[1]));

                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with modifying workingexpense Overheads : " + e);
            }
            populateLabour();
            populateAllTotals();
        } else if (addOrChange.equals("add")) {
            try {
                String sql = "Insert into WorkingExpense(WorkingExpenseID, jobID,ExpenseTitle, ExpenseType, Count_Hours, Cost_Rate) values(?,?,?,?,?,?)";
                PreparedStatement statement = conn.prepareStatement(sql);
                Random rand = new Random();
                statement.setInt(1, rand.nextInt(100000));
                statement.setString(2, currentJobID);
                statement.setString(3, work_over_tf_labour.getText());
                statement.setString(4, "Labour");
                statement.setInt(5, Integer.parseInt(work_labour_spin_hours.getValue().toString()));
                statement.setInt(6, Integer.parseInt(rateSpinner.getValue().toString()));
                statement.executeUpdate();
            } catch (Exception e) {
                System.out.println("Problem with adding quoteItem Labour : " + e);
                System.out.println("currentjobID " + work_mat_tf_cost.getText().toString());
            }
        }
        addOrChange = "x";
        populateLabourExpenses();
        calculateAllExpenses();
        //populate the bars
        populateAllBars();
        enablePanelWorkOver(false);
        work_over_tf_labour.setEnabled(false);
        work_labour_spin_hours.setEnabled(false);
        rateSpinner.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void work_mat_li_materialsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_work_mat_li_materialsMouseClicked
        String item[] = work_mat_li_materials.getSelectedValue().split("_");
        String cost[] = item[0].split("R");
        work_mat_tf_cost.setText(cost[1]);
        work_mat_tf_item.setText(item[1]);
        work_mat_spin_count.setValue(Integer.parseInt(item[2]));

    }//GEN-LAST:event_work_mat_li_materialsMouseClicked

    private void work_over_li_overheadsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_work_over_li_overheadsMouseClicked
        String item[] = work_over_li_overheads.getSelectedValue().split("_");
        String cost[] = item[0].split("R");
        work_over_tf_cost.setText(cost[1]);
        work_over_tf_overhead.setText(item[1]);
    }//GEN-LAST:event_work_over_li_overheadsMouseClicked

    private void work_labour_li_labourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_work_labour_li_labourMouseClicked
        String item[] = work_labour_li_labour.getSelectedValue().split("_");
        String cost[] = item[0].split("R");
        rateSpinner.setValue(Integer.parseInt(cost[1]));
        work_over_tf_labour.setText(item[1]);
        work_labour_spin_hours.setValue(Integer.parseInt(item[2]));
    }//GEN-LAST:event_work_labour_li_labourMouseClicked

    private void quote_but_resetChargesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quote_but_resetChargesActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to clear the contingency and charge values?\nNOTE: This is Ireversable");
        if (confirm == 0) {
            quote_spin_cont_mat.setValue(0);
            quote_spin_cont_over.setValue(0);
            quote_spin_cont_labour.setValue(0);
            quote_spin_charge_mat.setValue(0);
            quote_spin_charge_over.setValue(0);
            quote_spin_charge_labour.setValue(0);
        }
    }//GEN-LAST:event_quote_but_resetChargesActionPerformed

    private void quote_allquotes_comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_quote_allquotes_comboItemStateChanged

        itemStateChangedInt++;
        if (itemStateChangedInt == 3) {
            quoteComboBoxItemSelected();
            itemStateChangedInt = 1;
        }
    }//GEN-LAST:event_quote_allquotes_comboItemStateChanged

    private void final_rb_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_final_rb_allActionPerformed
        populateExpensesTable();
    }//GEN-LAST:event_final_rb_allActionPerformed

    private void final_rb_matActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_final_rb_matActionPerformed
        this.sortedExpensesTable("Material");
    }//GEN-LAST:event_final_rb_matActionPerformed

    private void final_rb_overActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_final_rb_overActionPerformed
        this.sortedExpensesTable("Overheads");
    }//GEN-LAST:event_final_rb_overActionPerformed

    private void final_rb_labActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_final_rb_labActionPerformed
        this.sortedExpensesTable("Labour");
    }//GEN-LAST:event_final_rb_labActionPerformed

    private void job_cb_selectClientItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_job_cb_selectClientItemStateChanged
        itemStateChangedInt++;
        if (itemStateChangedInt == 3) {
            String selectedClient[] = job_cb_selectClient.getSelectedItem().toString().split(" ");
            currentClientID = selectedClient[1];
            populateClientInfo();
            itemStateChangedInt = 1;
        }
    }//GEN-LAST:event_job_cb_selectClientItemStateChanged

    private void quote_mat_li_materialsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quote_mat_li_materialsMouseClicked

        //get the item ID
        String selectedItem[] = quote_mat_li_materials.getSelectedValue().toString().split("#");
        String selectedItemCode = selectedItem[1].toString();

        //read the data from the table in the Database (using ID)
        populateFieldsOfSelectedQuoteItem(selectedItemCode, "Material");

    }//GEN-LAST:event_quote_mat_li_materialsMouseClicked

    private void quote_over_li_overheadsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quote_over_li_overheadsMouseClicked

        //get the item ID
        String selectedItem[] = quote_over_li_overheads.getSelectedValue().toString().split("#");
        String selectedItemCode = selectedItem[1].toString();

        //populate the data from the table in the Database (using ID)
        populateFieldsOfSelectedQuoteItem(selectedItemCode, "Overhead");

    }//GEN-LAST:event_quote_over_li_overheadsMouseClicked

    private void quote_labour_li_labourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quote_labour_li_labourMouseClicked

        //get the item ID
        String selectedItem[] = quote_labour_li_labour.getSelectedValue().toString().split("#");
        String selectedItemCode = selectedItem[1].toString();

        //read the data from the table in the Database (using ID)
        populateFieldsOfSelectedQuoteItem(selectedItemCode, "Labour");

    }//GEN-LAST:event_quote_labour_li_labourMouseClicked

    private void l_quoteIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_quoteIDMouseClicked
        quote_allquotes_combo.setSelectedItem(acceptedQuoteID);
    }//GEN-LAST:event_l_quoteIDMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_jobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_jobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_jobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_jobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_jobStates().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_close;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton final_but_managePay;
    private javax.swing.JButton final_but_signOff;
    private javax.swing.JProgressBar final_proBar_primary_labour;
    private javax.swing.JProgressBar final_proBar_primary_mat;
    private javax.swing.JProgressBar final_proBar_primary_over;
    private javax.swing.JProgressBar final_proBar_primary_total;
    private javax.swing.JProgressBar final_proBar_secondary_labour;
    private javax.swing.JProgressBar final_proBar_secondary_mat;
    private javax.swing.JProgressBar final_proBar_secondary_over;
    private javax.swing.JProgressBar final_proBar_secondary_total;
    private javax.swing.JRadioButton final_rb_all;
    private javax.swing.JRadioButton final_rb_lab;
    private javax.swing.JRadioButton final_rb_mat;
    private javax.swing.JRadioButton final_rb_over;
    private javax.swing.JTable final_table_costs;
    private javax.swing.JTextField final_tf_ACost_labour;
    private javax.swing.JTextField final_tf_ACost_mat;
    private javax.swing.JTextField final_tf_ACost_over;
    private javax.swing.JTextField final_tf_ACost_total;
    private javax.swing.JTextField final_tf_PCost_labour;
    private javax.swing.JTextField final_tf_PCost_mat;
    private javax.swing.JTextField final_tf_PCost_over;
    private javax.swing.JTextField final_tf_PCost_total;
    private javax.swing.JTextField final_tf_Quote_labour;
    private javax.swing.JTextField final_tf_Quote_mat;
    private javax.swing.JTextField final_tf_Quote_over;
    private javax.swing.JTextField final_tf_Quote_total;
    private javax.swing.JTextField final_tf_outst;
    private javax.swing.JTextField final_tf_quote;
    private javax.swing.JTextField final_tf_rec;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jobStatesTabPane;
    private javax.swing.JButton job_but_cancel;
    private javax.swing.JButton job_but_changeDetails;
    private javax.swing.JButton job_but_createJob;
    private javax.swing.JButton job_but_createQuote;
    private javax.swing.JButton job_but_done;
    private javax.swing.JButton job_but_insertAdr;
    private javax.swing.JComboBox<String> job_cb_selectClient;
    private javax.swing.JSpinner job_spin_date;
    private javax.swing.JTextArea job_ta_comments;
    private javax.swing.JTextArea job_ta_specification;
    private javax.swing.JTextField job_tf_contactNr;
    private javax.swing.JTextField job_tf_email;
    private javax.swing.JTextField job_tf_fname;
    private javax.swing.JTextField job_tf_lname;
    private javax.swing.JTextField job_tf_siteLocation;
    private javax.swing.JTextField job_tf_title;
    private javax.swing.JLabel l_clientCode;
    private javax.swing.JLabel l_clientFullname;
    private javax.swing.JLabel l_contactNr;
    private javax.swing.JLabel l_currentCost;
    private javax.swing.JLabel l_email;
    private javax.swing.JLabel l_jobID;
    private javax.swing.JLabel l_jobState;
    private javax.swing.JLabel l_jobTitle;
    private javax.swing.JLabel l_plannedCost;
    private javax.swing.JLabel l_quoteID;
    private javax.swing.JLabel l_quoteState;
    private javax.swing.JLabel l_siteLocation;
    private javax.swing.JLabel l_totalQuote;
    private javax.swing.JLabel quoteID_l;
    private javax.swing.JTabbedPane quote_TabPane;
    private javax.swing.JComboBox quote_allquotes_combo;
    private javax.swing.JButton quote_but_acc;
    private javax.swing.JButton quote_but_create;
    private javax.swing.JButton quote_but_delete;
    private javax.swing.JButton quote_but_jobDesc;
    private javax.swing.JButton quote_but_rej;
    private javax.swing.JButton quote_but_resetCharges;
    private javax.swing.JButton quote_labour_but_add;
    private javax.swing.JButton quote_labour_but_cancel;
    private javax.swing.JButton quote_labour_but_change;
    private javax.swing.JButton quote_labour_but_done;
    private javax.swing.JButton quote_labour_but_remove;
    private javax.swing.JComboBox<String> quote_labour_combo_workers;
    private javax.swing.JLabel quote_labour_l_rate;
    private javax.swing.JList<String> quote_labour_li_labour;
    private javax.swing.JSpinner quote_labour_spin_hours;
    private javax.swing.JButton quote_mat_but_add;
    private javax.swing.JButton quote_mat_but_cancel;
    private javax.swing.JButton quote_mat_but_change;
    private javax.swing.JButton quote_mat_but_done;
    private javax.swing.JButton quote_mat_but_remove;
    private javax.swing.JList<String> quote_mat_li_materials;
    private javax.swing.JSpinner quote_mat_spin_count;
    private javax.swing.JTextField quote_mat_tf_cost;
    private javax.swing.JTextField quote_mat_tf_item;
    private javax.swing.JButton quote_over_but_add;
    private javax.swing.JButton quote_over_but_cancel;
    private javax.swing.JButton quote_over_but_change;
    private javax.swing.JButton quote_over_but_done;
    private javax.swing.JButton quote_over_but_remove;
    private javax.swing.JList<String> quote_over_li_overheads;
    private javax.swing.JTextField quote_over_tf_overhead;
    private javax.swing.JTextField quote_over_tf_total;
    private javax.swing.JSpinner quote_spin_charge_labour;
    private javax.swing.JSpinner quote_spin_charge_mat;
    private javax.swing.JSpinner quote_spin_charge_over;
    private javax.swing.JSpinner quote_spin_cont_labour;
    private javax.swing.JSpinner quote_spin_cont_mat;
    private javax.swing.JSpinner quote_spin_cont_over;
    private javax.swing.JTextField quote_tf_chFee_labour;
    private javax.swing.JTextField quote_tf_chFee_mat;
    private javax.swing.JTextField quote_tf_chFee_over;
    private javax.swing.JTextField quote_tf_cost_labour;
    private javax.swing.JTextField quote_tf_cost_mat;
    private javax.swing.JTextField quote_tf_cost_over;
    private javax.swing.JTextField quote_tf_cost_subtotal;
    private javax.swing.JTextField quote_tf_finalCharges;
    private javax.swing.JTextField quote_tf_final_labour;
    private javax.swing.JTextField quote_tf_final_mat;
    private javax.swing.JTextField quote_tf_final_over;
    private javax.swing.JTextField quote_tf_total;
    private javax.swing.JSpinner rateSpinner;
    private javax.swing.JLabel selectedQuoteState;
    private javax.swing.JLabel warningLab;
    private javax.swing.JLabel warningMat;
    private javax.swing.JLabel warningOver;
    private javax.swing.JLabel warningTotal;
    private javax.swing.JTabbedPane work_TabPane;
    private javax.swing.JButton work_but_finaliseJob;
    private javax.swing.JButton work_labour_but_add;
    private javax.swing.JList<String> work_labour_li_labour;
    private javax.swing.JSpinner work_labour_spin_hours;
    private javax.swing.JButton work_mat_but_add;
    private javax.swing.JButton work_mat_but_cancel;
    private javax.swing.JButton work_mat_but_change;
    private javax.swing.JButton work_mat_but_done;
    private javax.swing.JButton work_mat_but_remove;
    private javax.swing.JList<String> work_mat_li_materials;
    private javax.swing.JSpinner work_mat_spin_count;
    private javax.swing.JTextField work_mat_tf_cost;
    private javax.swing.JTextField work_mat_tf_item;
    private javax.swing.JButton work_over_but_add;
    private javax.swing.JButton work_over_but_cancel;
    private javax.swing.JButton work_over_but_change;
    private javax.swing.JButton work_over_but_done;
    private javax.swing.JButton work_over_but_remove;
    private javax.swing.JList<String> work_over_li_overheads;
    private javax.swing.JTextField work_over_tf_cost;
    private javax.swing.JTextField work_over_tf_labour;
    private javax.swing.JTextField work_over_tf_overhead;
    private javax.swing.JProgressBar work_proBar_primary_labour;
    private javax.swing.JProgressBar work_proBar_primary_mat;
    private javax.swing.JProgressBar work_proBar_primary_over;
    private javax.swing.JProgressBar work_proBar_primary_total;
    private javax.swing.JProgressBar work_proBar_secondary_labour;
    private javax.swing.JProgressBar work_proBar_secondary_mat;
    private javax.swing.JProgressBar work_proBar_secondary_over;
    private javax.swing.JProgressBar work_proBar_secondary_total;
    private javax.swing.JTextField work_tf_ACost_labour;
    private javax.swing.JTextField work_tf_ACost_mat;
    private javax.swing.JTextField work_tf_ACost_over;
    private javax.swing.JTextField work_tf_ACost_total;
    private javax.swing.JTextField work_tf_PCost_labour;
    private javax.swing.JTextField work_tf_PCost_mat;
    private javax.swing.JTextField work_tf_PCost_over;
    private javax.swing.JTextField work_tf_PCost_total;
    private javax.swing.JTextField work_tf_Quote_labour;
    private javax.swing.JTextField work_tf_Quote_mat;
    private javax.swing.JTextField work_tf_Quote_over;
    private javax.swing.JTextField work_tf_Quote_total;
    // End of variables declaration//GEN-END:variables

    private void clearQuoteFieldValues() {
        //clear the totals
        quote_tf_cost_mat.setText("0");
        quote_tf_cost_labour.setText("0");
        quote_tf_cost_over.setText("0");
        quote_tf_cost_subtotal.setText("0");
    }

    private void populateFieldsOfSelectedQuoteItem(String quoteItemCode, String type) {

        //declare variables
        String title = "";
        int countHours = 0;
        int costRate = 0;

        //get the data from the database (using the quoteitemCode)
        try {
            Statement st = conn.createStatement();
            String query = "select * from quoteItem where QuoteItemCode = '" + quoteItemCode + "'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                title = (rs.getString("QuoteTitle"));
                countHours = (rs.getInt("Count_Hours"));
                costRate = (rs.getInt("Cost_Rate"));
            }
        } catch (Exception e) {
            System.out.println("error in populateClientCombo:" + e);
        }

        //populate the fields accordingly
        if (type.equals("Material")) {
            quote_mat_tf_item.setText(title);
            quote_mat_tf_cost.setText("" + costRate);
            quote_mat_spin_count.setValue(countHours);
        }

        if (type.equals("Overhead")) {
            quote_over_tf_overhead.setText(title);
            quote_over_tf_total.setText("" + costRate);
        }

        if (type.equals("Labour")) {
            quote_labour_combo_workers.setSelectedItem(title);
            quote_labour_spin_hours.setValue(countHours);
        }
    }

    private void calculateAndCaptureQuoteCharges() {
        calculateQuoteCharges();
        captureQuoteCharges();
    }

    private void populateQuoteCharges() {
        getContingenciesAndCharges(currentQuoteID);
        //set the contingency spinners to DB values
        quote_spin_cont_mat.setValue(materialCont);
        quote_spin_cont_over.setValue(overheadCont);
        quote_spin_cont_labour.setValue(labourCont);
        //set the charge spinners to DB values
        quote_spin_charge_labour.setValue(labourCharge);
        quote_spin_charge_mat.setValue(materialCharge);
        quote_spin_charge_over.setValue(overheadCharge);
    }

    private void calculateQuoteCharges() {
        DecimalFormat df = new DecimalFormat("#.##");
        double matCost = Double.parseDouble(quote_tf_cost_mat.getText().toString());
        double chargingM = Double.parseDouble(quote_tf_cost_mat.getText().toString()) / 100 * Double.parseDouble(quote_spin_charge_mat.getValue().toString());
        double contM = Double.parseDouble(quote_spin_cont_mat.getValue().toString()) * matCost / 100;
        quote_tf_chFee_mat.setText(Double.toString(chargingM));
        double finalM = chargingM + matCost + contM;
        quote_tf_final_mat.setText(Double.toString(finalM));

        double overCost = Double.parseDouble(quote_tf_cost_over.getText().toString());
        double chargingO = Double.parseDouble(quote_tf_cost_over.getText().toString()) / 100 * Double.parseDouble(quote_spin_charge_over.getValue().toString());
        double contO = Double.parseDouble(quote_spin_cont_over.getValue().toString()) * overCost / 100;
        quote_tf_chFee_over.setText(Double.toString(chargingO));
        double finalO = overCost + chargingO + contO;
        quote_tf_final_over.setText(Double.toString(finalO));

        double labourCost = Double.parseDouble(quote_tf_cost_labour.getText().toString());
        double chargingL = Double.parseDouble(quote_tf_cost_labour.getText().toString()) / 100 * Double.parseDouble(quote_spin_charge_labour.getValue().toString());
        double contL = Double.parseDouble(quote_spin_cont_labour.getValue().toString()) * labourCost / 100;
        quote_tf_chFee_labour.setText(Double.toString(chargingL));
        double finalL = labourCost + chargingL + contL;
        quote_tf_final_labour.setText(Double.toString(finalL));

        double finalCost = finalM + finalO + finalL;
        quote_tf_total.setText(df.format(finalCost));
        String finalCharges = df.format((chargingM + chargingO + chargingL));
        quote_tf_finalCharges.setText(finalCharges);
    }

    private void captureQuoteCharges() {
        try {
            String sql = "Update quote set materialCont=?, OverheadCont=?, LabourCont=?,materialCharge=?, OverheadCharge=?, LabourCharge=?  where quoteID = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, quote_spin_cont_mat.getValue().toString());
            statement.setString(2, quote_spin_cont_over.getValue().toString());
            statement.setString(3, quote_spin_cont_labour.getValue().toString());
            statement.setString(4, quote_spin_charge_mat.getValue().toString());
            statement.setString(5, quote_spin_charge_over.getValue().toString());
            statement.setString(6, quote_spin_charge_labour.getValue().toString());
            statement.setString(7, currentQuoteID);
            statement.executeUpdate();

        } catch (Exception e) {
            System.out.println("Error with captureQuoteCharges markup :" + e);
        }
    }

    private void populateClientCombo() {
        job_cb_selectClient.removeAllItems();

        try {
            Statement st = conn.createStatement();
            String query = "select fname,clientID from client";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String item = rs.getString("fname") + " " + rs.getString("ClientID");
                job_cb_selectClient.addItem(item);
            }
        } catch (Exception e) {
            System.out.println("error in populateClientCombo:" + e);
        }

    }

    private void connection() {
        try {
            String filename = new File("afordableDB.accdb").getAbsolutePath();
            conn = DriverManager.getConnection("jdbc:ucanaccess://C:/Program Files/afordableDB.accdb");
            //conn = DriverManager.getConnection("jdbc:ucanaccess://C:/Program");

        } catch (Exception e) {
            System.out.println("Database connection error" + e);
        }
    }

    private String getClientIDForJob() {
        try {
            Statement st = conn.createStatement();
            String query = "select * from jobs where jobID = '" + currentJobID + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                return rs.getString("clientID");
            }
        } catch (Exception e) {
            System.out.println("Problem with populateClientsInfo " + e);
        }
        return "no client found";
    }

    private void populateClientInfo() {
        try {
            Statement st = conn.createStatement();
            String query = "select * from client where clientID = '" + currentClientID + "'";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                l_clientCode.setText(rs.getString("clientID"));
                l_clientFullname.setText(rs.getString("fname"));
                l_contactNr.setText(rs.getString("connum"));
                l_email.setText(rs.getString("email"));
                l_siteLocation.setText(rs.getString("address"));
                job_tf_fname.setText(rs.getString("fname"));
                job_tf_lname.setText(rs.getString("lname"));
                job_tf_contactNr.setText(rs.getString("connum"));
                job_tf_email.setText(rs.getString("email"));
            }
        } catch (Exception e) {
            System.out.println("Problem with populateClientsInfo " + e);
        }

    }

    private void populateJobInfo() {
        try {
            Statement st = conn.createStatement();
            String query = "select * from jobs where jobID = '" + currentJobID + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                l_jobID.setText(rs.getString("jobID"));
                l_jobTitle.setText(rs.getString("jobTitle"));
                job_tf_title.setText(rs.getString("jobTitle"));
                job_ta_specification.setText(rs.getString("jobDes"));
                job_ta_comments.setText(rs.getString("Comments"));
                job_tf_siteLocation.setText(rs.getString("Address"));
            }

        } catch (Exception e) {
            System.out.println("Problems with populatejobInfo : " + e);
        }
    }

    private boolean getAllQuotes() {
        DefaultComboBoxModel a = new DefaultComboBoxModel();
        try {
            Statement st = conn.createStatement();
            String query = "select * from quote where jobID = '" + currentJobID + "'";
            rs = st.executeQuery(query);

            //if the current Job has no quotes attached to it.
            if (!rs.next()) {
                //exit method with a false, to not even loop through the results (there are none)
                return false;
            }

            //loop through results and add to comboBox
            do {
                a.addElement(rs.getString("QuoteID"));
            } while (rs.next());

        } catch (Exception e) {
            System.out.println("Problems with populating combo with all the quotes: " + e);
        }
        quote_allquotes_combo.setModel(a);
        return true;
    }

    private void addNewJob() {
        try {
            String sql = "Insert into jobs(jobID,ClientID,JobTitle,JobDes,JobStartDate,Comments,JobState,QuoteState,Address) values(?,?,?,?,?,?,?,?,?)";
            PreparedStatement statement = conn.prepareStatement(sql);

            boolean goahead = false;
            String jobCode = "";

            while (goahead == false) {
                Random rand = new Random();
                jobCode = Integer.toString(rand.nextInt(100000));
                jobCode = "J" + jobCode;

                String sql2 = "Select * from jobs";
                Statement st = conn.createStatement();
                rs = st.executeQuery(sql2);

                while (rs.next()) {
                    if (rs.getString("jobID") != jobCode) {
                        goahead = true;
                    }
                }
            }

            statement.setString(1, jobCode);
            String selectedClient[] = job_cb_selectClient.getSelectedItem().toString().split(" ");
            statement.setString(2, selectedClient[1]);
            statement.setString(3, job_tf_title.getText());
            statement.setString(4, job_ta_specification.getText());

            System.out.println("date entered" + job_spin_date.getModel().getValue().toString());
            String[] dateSplit = job_spin_date.getModel().getValue().toString().split(" ");
            String[] timeSplit = dateSplit[3].split(":");

            statement.setString(5, job_spin_date.getModel().getValue().toString());

            statement.setString(6, job_ta_comments.getText());
            statement.setString(7, "Open");
            statement.setString(8, "Quote in Progress");
            statement.setString(9, job_tf_siteLocation.getText());

            statement.executeUpdate();
            currentJobID = jobCode;

        } catch (Exception e) {
            System.out.println("Problem with adding new job : " + e);
        }
    }

    private void populateStaffCombo() {
        DefaultComboBoxModel a = new DefaultComboBoxModel();
        try {
            Statement st = conn.createStatement();
            String query = "select Fname,LName from staff";
            rs = st.executeQuery(query);
            while (rs.next()) {
                String worker = rs.getString("Fname") + "_" + rs.getString("Lname");
                a.addElement(worker);
            }

        } catch (Exception e) {
            System.out.println("problem with populateStaffCombo :" + e);
        }
        quote_labour_combo_workers.setModel(a);

    }

    private void populateMaterials() {
        DefaultListModel a = new DefaultListModel();
        String item = "";
        try {
            String quoteType = "Material";
            Statement st = conn.createStatement();
            String query = "select * from quoteItem where quoteID = '" + currentQuoteID + "' and quoteType = '" + quoteType + "'";
            rs = st.executeQuery(query);
            while (rs.next()) {
                item = "R" + rs.getInt("Cost_rate") + "  " + rs.getString("QuoteTitle") + " (" + rs.getInt("Count_Hours") + ") #" + rs.getString("quoteItemCode");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("problem with populateStaffCombo :" + e);
        }
        quote_mat_li_materials.setModel(a);
    }

    private void populateOverheads() {
        DefaultListModel a = new DefaultListModel();
        String item = "";
        try {
            String quoteType = "Overheads";
            Statement st = conn.createStatement();
            String query = "select * from quoteItem where quoteID = '" + currentQuoteID + "' and quoteType = '" + quoteType + "'";
            rs = st.executeQuery(query);
            while (rs.next()) {
                item = "R" + rs.getInt("Cost_rate") + "  " + rs.getString("QuoteTitle") + " #" + rs.getString("quoteItemCode");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("problem with populateStaffCombo :" + e);
        }
        quote_over_li_overheads.setModel(a);
    }

    private void populateLabour() {
        DefaultListModel a = new DefaultListModel();
        String item = "";
        try {
            String quoteType = "Labour";
            Statement st = conn.createStatement();
            String query = "select * from quoteItem where quoteID = '" + currentQuoteID + "' and quoteType = '" + quoteType + "'";
            rs = st.executeQuery(query);
            while (rs.next()) {
                item = "R" + rs.getInt("Cost_rate") + " " + rs.getString("QuoteTitle") + " (" + rs.getInt("Count_Hours") + ") #" + rs.getString("quoteItemCode");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("problem with populateStaffCombo :" + e);
        }
        quote_labour_li_labour.setModel(a);
    }

    private void getWorkerRate() {
        try {
            Statement st = conn.createStatement();
            String worker[] = quote_labour_combo_workers.getSelectedItem().toString().split("_");

            String query = "select rate from staff where fname = '" + worker[0] + "' and lname = '" + worker[1] + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                int rate = rs.getInt("rate");
                quote_labour_l_rate.setText(Integer.toString(rate));
            }
        } catch (Exception e) {
            System.out.println("error in populateClientCombo:" + e);
        }
    }

    private double calculateTotals(String typeOfItem) {
        double total = 0;
        try {
            Statement st = conn.createStatement();

            String query = "select * from quoteItem where quoteID = '" + currentQuoteID + "' and QuoteType = '" + typeOfItem + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                int rate = rs.getInt("Cost_Rate");
                int quantity = rs.getInt("Count_Hours");
                total = total + (rate * quantity);
            }
        } catch (Exception e) {
            System.out.println("error in calculateTotals:" + e);
        }

        return total;
    }

    private double calculateTotals(String typeOfItem, String quoteID) {
        double total = 0;
        try {
            Statement st = conn.createStatement();

            String query = "select * from quoteItem where quoteID = '" + quoteID + "' and QuoteType = '" + typeOfItem + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                int rate = rs.getInt("Cost_Rate");
                int quantity = rs.getInt("Count_Hours");
                total = total + (rate * quantity);
            }
        } catch (Exception e) {
            System.out.println("error in calculateTotals:" + e);
        }

        return total;
    }

    private void populateAllTotals() {
        quote_tf_cost_mat.setText(Double.toString(calculateTotals("Material")));
        quote_tf_cost_over.setText(Double.toString(calculateTotals("Overheads")));
        quote_tf_cost_labour.setText(Double.toString(calculateTotals("Labour")));
        double subtotal = Double.parseDouble(quote_tf_cost_mat.getText()) + Double.parseDouble(quote_tf_cost_over.getText()) + Double.parseDouble(quote_tf_cost_labour.getText());
        quote_tf_cost_subtotal.setText(Double.toString(subtotal));
    }

    private void populateTotalsOnWorkPage() {

        getContingenciesAndCharges(acceptedQuoteID);

        // Planned totals
        double materialIncCont = (calculateTotals("Material", acceptedQuoteID) * ((materialCont + 100) / 100));
        work_tf_PCost_mat.setText(Double.toString(materialIncCont));
        double overheadsIncCont = (calculateTotals("Overheads", acceptedQuoteID) * ((overheadCont + 100) / 100));
        work_tf_PCost_over.setText(Double.toString(overheadsIncCont));
        double labourIncCont = calculateTotals("Labour", acceptedQuoteID) * ((labourCont + 100) / 100);
        work_tf_PCost_labour.setText(Double.toString(labourIncCont));
        work_tf_PCost_total.setText(Double.toString(materialIncCont + overheadsIncCont + labourIncCont));

        System.out.println("--------");
        System.out.println("materialCharge = " + materialCharge);
        System.out.println("overheadCharge = " + overheadCharge);
        System.out.println("labourCharge = " + labourCharge);
        System.out.println("--------");

        // Total on Quote so it includes charges
        double materialIncCharges = materialIncCont * ((materialCharge + 100) / 100);
        work_tf_Quote_mat.setText(Double.toString(materialIncCharges));
        double overheadIncCharges = overheadsIncCont * ((overheadCharge + 100) / 100);
        work_tf_Quote_over.setText(Double.toString(overheadIncCharges));
        double labourIncCharges = labourIncCont * ((labourCharge + 100) / 100);
        work_tf_Quote_labour.setText(Double.toString(labourIncCharges));
        work_tf_Quote_total.setText(Double.toString(materialIncCharges + overheadIncCharges + labourIncCharges));
    }

    private void setStatesFields(String state) {
        //TODO method to be used to update states at bottom right hand corner

    }

    private void populateMaterialExpenses() {
        DefaultListModel a = new DefaultListModel();
        String item = "";
        try {
            String expenseType = "Material";
            Statement st = conn.createStatement();
            String query = "select * from WorkingExpense where jobID = '" + currentJobID + "' and ExpenseType = '" + expenseType + "'";
            rs = st.executeQuery(query);
            while (rs.next()) {
                item = "R" + rs.getInt("Cost_rate") + "_" + rs.getString("ExpenseTitle") + "_" + rs.getInt("Count_Hours") + "_#" + rs.getString("WorkingExpenseID");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("problem with populating material expenses :" + e);
        }
        work_mat_li_materials.setModel(a);
    }

    private void populateOverheadExpenses() {
        DefaultListModel a = new DefaultListModel();
        String item = "";
        try {
            String expenseType = "Overheads";
            Statement st = conn.createStatement();
            String query = "select * from WorkingExpense where jobID = '" + currentJobID + "' and ExpenseType = '" + expenseType + "'";
            rs = st.executeQuery(query);
            while (rs.next()) {
                item = "R" + rs.getInt("Cost_rate") + "_" + rs.getString("ExpenseTitle") + "_" + rs.getInt("Count_Hours") + "_#" + rs.getString("WorkingExpenseID");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("problem with populating overhead expenses :" + e);
        }
        work_over_li_overheads.setModel(a);
    }

    private void populateLabourExpenses() {
        DefaultListModel a = new DefaultListModel();
        String item = "";
        try {
            String expenseType = "Labour";
            Statement st = conn.createStatement();
            String query = "select * from WorkingExpense where jobID = '" + currentJobID + "' and ExpenseType = '" + expenseType + "'";
            rs = st.executeQuery(query);
            while (rs.next()) {
                item = "R" + rs.getInt("Cost_rate") + "_" + rs.getString("ExpenseTitle") + "_" + rs.getInt("Count_Hours") + "_#" + rs.getString("WorkingExpenseID");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("problem with populating labour expenses :" + e);
        }
        work_labour_li_labour.setModel(a);
    }

    private void calculateAllExpenses() {
        work_tf_ACost_mat.setText(Double.toString(populateExpense("Material")));
        work_tf_ACost_over.setText(Double.toString(populateExpense("Overheads")));
        work_tf_ACost_labour.setText(Double.toString(populateExpense("Labour")));
        double subtotal = Double.parseDouble(work_tf_ACost_mat.getText()) + Double.parseDouble(work_tf_ACost_over.getText()) + Double.parseDouble(work_tf_ACost_labour.getText());
        work_tf_ACost_total.setText(Double.toString(subtotal));
    }

    private Double populateExpense(String typeOfItem) {
        double total = 0;
        try {
            Statement st = conn.createStatement();
            String query = "select * from WorkingExpense where JobID = '" + currentJobID + "' and ExpenseType = '" + typeOfItem + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                int rate = rs.getInt("Cost_Rate");
                int quantity = rs.getInt("Count_Hours");
                total = total + (rate * quantity);
            }
        } catch (Exception e) {
            System.out.println("error in populate expense type:" + typeOfItem + "error " + e);
        }

        return total;
    }

    private void getContingenciesAndCharges(String id) {
        try {
            String sql = "Select * from quote where quoteID = '" + id + "'";
            Statement st = conn.createStatement();
            rs = st.executeQuery(sql);
            if (rs.next()) {
                materialCont = Double.parseDouble(rs.getString("materialCont"));
                labourCont = Double.parseDouble(rs.getString("labourCont"));
                overheadCont = Double.parseDouble(rs.getString("overheadCont"));
                materialCharge = Double.parseDouble(rs.getString("materialCharge"));
                labourCharge = Double.parseDouble(rs.getString("labourCharge"));
                overheadCharge = Double.parseDouble(rs.getString("overheadCharge"));
            }
        } catch (Exception e) {
            System.out.println("Problem with getContingenciesAndCharges = " + e);
        }
    }

    private void populateFromQuoteCombos() {
        jComboBox1.setModel(populateCombo("Material"));
        jComboBox2.setModel(populateCombo("Overheads"));
        jComboBox3.setModel(populateCombo("Labour"));
    }

    private DefaultComboBoxModel populateCombo(String type) {
        DefaultComboBoxModel a = new DefaultComboBoxModel();
        String item;
        try {
            String sql = "Select * from quoteItem where quoteID = '" + acceptedQuoteID + "' AND quoteType = '" + type + "'";
            Statement st = conn.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                item = rs.getString("quoteTitle") + "_";
                item = item + "R" + rs.getString("Cost_Rate") + "_";
                item = item + "Quantity/Hours:" + rs.getString("Count_Hours");
                a.addElement(item);
            }
        } catch (Exception e) {
            System.out.println("Problem with populateCombo = " + e);
        }
        return a;
    }

    private void clearQuoteItemInsertionFields() {
        //materials
        quote_mat_tf_item.setText("");
        quote_mat_tf_cost.setText("");
        quote_mat_spin_count.setValue(0);

        //overheads
        quote_over_tf_overhead.setText("");
        quote_over_tf_total.setText("");

        //labour
        quote_labour_spin_hours.setValue(0);
    }

    private void validateSelectedQuoteStatus() {
        try {
            String currentState = "";
            Statement st = conn.createStatement();
            String query = "select * from Quote where QuoteID = '" + currentQuoteID + "'";
            rs = st.executeQuery(query);
            if (rs.next()) {
                currentState = rs.getString("QuoteStatus");
            }

            if (currentState.equalsIgnoreCase("Accepted")) {
                enableQuoteComponents(false);
                quote_but_rej.setEnabled(true);
                //ultimately, set the combobox to be true sothat you can setill view the quotes,
                //even if the current one is on lockdown
                quote_allquotes_combo.setEnabled(true);
                selectedQuoteState.setText("Quote Accepted");
            }
            if (currentState.equalsIgnoreCase("Rejected")) {
                enableQuoteComponents(false);
                //ultimately, set the combobox to be true sothat you can setill view the quotes,
                //even if the current one is on lockdown
                quote_allquotes_combo.setEnabled(true);
                selectedQuoteState.setText("Quote Rejected");
            }
            if (currentState.equalsIgnoreCase("Quote in Progress")) {
                enableQuoteComponents(true);
                selectedQuoteState.setText("Quote I.P.");
            }

        } catch (Exception e) {
            System.out.println("problem with validateQuoteStatus :" + e);
        }
    }

    private String getJobActualQuoteStatus() {

        //this method scans through the entire quote list of the current job,
        //and returns the status of the job compared to all of the quotes
        //first, assume that all of the quotes are rejected by default.
        try {
            String quoteStatus = "";
            Statement st = conn.createStatement();
            String query = "select * from quote where jobID = '" + currentJobID + "'";
            ResultSet rs = st.executeQuery(query);

            //if the current Job has no quotes attached to it.
            if (!rs.next()) {
                //exit method with a false, to not even loop through the results (there are none)
                jobQuoteState = "Quote in Progress";
                return "Quote in Progress";
            }

            //loop through results
            do {
                quoteStatus = rs.getString("QuoteStatus");

                if (quoteStatus.equalsIgnoreCase("Accepted")) {
                    //return rejected if the accepted quote was found
                    acceptedQuoteID = rs.getString("QuoteID");
                    jobQuoteState = "Quote Accepted";
                    return "Quote Accepted";
                }

                if (quoteStatus.equalsIgnoreCase("Quote in Progress")) {
                    //if at least one quote is in progress, then the job is not rejected
                    jobQuoteState = "Quote in Progress";
                    return "Quote in Progress";
                }
            } while (rs.next());

        } catch (Exception e) {
            System.out.println("Problems with validateActualJobQuoteStatus: " + e);
        }
        //if it made it to the end, then the scan was complete, and all of the quotes were rejected,
        //therefore the job is rejected
        jobQuoteState = "Quote Rejected";
        return "Quote Rejected";
    }

    private void updateRealJobQuoteState() {
        //get the state of the job, relevant to all of the current job quotes
        String jobStatus = getJobActualQuoteStatus();
        try {

            //and update the job state
            String sql = "Update jobs set QuoteState=? Where JobID =?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, jobStatus);
            statement.setString(2, currentJobID);
            statement.executeUpdate();
        } catch (Exception e) {
            System.out.println("Problem with updateJobQuoteState: " + e);
        }
    }

    private void updateQuoteLabels() {
        l_quoteID.setText(acceptedQuoteID);
        l_quoteState.setText(jobQuoteState);
    }

    ///FINALISE PAGE STUFF/////
    private void populateTotalsOnFinalisePage() {

        // Planned totals
        double materialIncCont = (calculateTotals("Material", getQuoteIDForCurrentJob()) * ((materialCont + 100) / 100));
        final_tf_PCost_mat.setText(Double.toString(materialIncCont));
        double overheadsIncCont = (calculateTotals("Overheads", getQuoteIDForCurrentJob()) * ((overheadCont + 100) / 100));
        final_tf_PCost_over.setText(Double.toString(overheadsIncCont));
        double labourIncCont = calculateTotals("Labour", getQuoteIDForCurrentJob()) * ((labourCont + 100) / 100);
        final_tf_PCost_labour.setText(Double.toString(labourIncCont));
        final_tf_PCost_total.setText(Double.toString(materialIncCont + overheadsIncCont + labourIncCont));

        // Total on Quote so it includes charges
        double materialIncCharges = materialIncCont * ((materialCharge + 100) / 100);
        final_tf_Quote_mat.setText(Double.toString(materialIncCharges));
        double overheadIncCharges = overheadsIncCont * ((overheadCharge + 100) / 100);
        final_tf_Quote_over.setText(Double.toString(overheadIncCharges));
        double labourIncCharges = labourIncCont * ((labourCharge + 100) / 100);
        final_tf_Quote_labour.setText(Double.toString(labourIncCharges));
        final_tf_Quote_total.setText(Double.toString(materialIncCharges + overheadIncCharges + labourIncCharges));
    }

    private void calculateAllExpensesOnFinalise() {
        final_tf_ACost_mat.setText(Double.toString(populateExpenseOnFinalise("Material")));
        final_tf_ACost_over.setText(Double.toString(populateExpenseOnFinalise("Overheads")));
        final_tf_ACost_labour.setText(Double.toString(populateExpenseOnFinalise("Labour")));
        double subtotal = Double.parseDouble(final_tf_ACost_mat.getText()) + Double.parseDouble(final_tf_ACost_over.getText()) + Double.parseDouble(final_tf_ACost_labour.getText());
        final_tf_ACost_total.setText(Double.toString(subtotal));
    }

    private Double populateExpenseOnFinalise(String typeOfItem) {
        double total = 0;
        try {
            Statement st = conn.createStatement();
            String query = "select * from WorkingExpense where JobID = '" + currentJobID + "' and ExpenseType = '" + typeOfItem + "'";
            rs = st.executeQuery(query);

            while (rs.next()) {
                int rate = rs.getInt("Cost_Rate");
                int quantity = rs.getInt("Count_Hours");
                total = total + (rate * quantity);
            }
        } catch (Exception e) {
            System.out.println("error in populate expense type:" + typeOfItem + "error " + e);
        }

        return total;
    }

    private void calculateAllProgressionsOnFinalise() {
        int matProgression = (int) (Double.parseDouble(final_tf_ACost_mat.getText()) / Double.parseDouble(final_tf_PCost_mat.getText()) * 100);
        final_proBar_primary_mat.setValue(matProgression);

        int overheadProgression = (int) (Double.parseDouble(final_tf_ACost_over.getText()) / Double.parseDouble(final_tf_PCost_over.getText()) * 100);
        final_proBar_primary_over.setValue(overheadProgression);

        int labourProgression = (int) (Double.parseDouble(final_tf_ACost_labour.getText()) / Double.parseDouble(final_tf_PCost_labour.getText()) * 100);
        final_proBar_primary_labour.setValue(labourProgression);

        int allProgression = (int) (Double.parseDouble(final_tf_ACost_total.getText()) / Double.parseDouble(final_tf_PCost_total.getText()) * 100);
        final_proBar_primary_total.setValue(allProgression);

    }

    private void populateExpensesTable() {
        try {
            Statement st = conn.createStatement();
            //String query = "select * from client";
            //String query = "Select clientID as Client_Code,fname as Name,lname as Surname,connum as Contact_Number,email from client";
            String query = "Select ExpenseTitle, ExpenseType, count_hours, cost_rate from WorkingExpense";
            rs = st.executeQuery(query);
            final_table_costs.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            System.out.println("problem with populating expenses table " + e);
        }
    }

    private void sortedExpensesTable(String category) {
        try {
            Statement st = conn.createStatement();
            //String query = "select * from client";
            //String query = "Select clientID as Client_Code,fname as Name,lname as Surname,connum as Contact_Number,email from client";
            String query = "Select ExpenseTitle, ExpenseType, count_hours, cost_rate from WorkingExpense where expensetype = '" + category + "'";
            rs = st.executeQuery(query);
            final_table_costs.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            System.out.println("problem with populating expenses table " + e);
        }
    }
    ///End of finalise stuff/////

    private void getReceivedFromDB() {
        double paidAmount = 0;
        try {
            Statement st = conn.createStatement();
            String query = "Select * from Payment where JobID = '" + currentJobID + "'";
            rs = st.executeQuery(query);
            while (rs.next() == true) {
                paidAmount += rs.getDouble("PaidAmount");
            }
        } catch (Exception e) {
            System.out.println("problem with populating expenses table " + e);
        }

        final_tf_rec.setText(Double.toString(paidAmount));
    }

    private void getQuoteTotalFromDB() {
        //first we need to get associated quote

        double materialIncCont = (calculateTotals("Material", getQuoteIDForCurrentJob()) * ((materialCont + 100) / 100));
        double overheadsIncCont = (calculateTotals("Overheads", getQuoteIDForCurrentJob()) * ((overheadCont + 100) / 100));
        double labourIncCont = (calculateTotals("Labour", getQuoteIDForCurrentJob()) * ((labourCont + 100) / 100));
        double total = materialIncCont + overheadsIncCont + labourIncCont;
        final_tf_quote.setText(Double.toString(total));

    }

    private void calculateOutstanding() {
        double diff = Double.parseDouble(final_tf_quote.getText()) - Double.parseDouble(final_tf_rec.getText());
        final_tf_outst.setText(Double.toString(diff));
    }

    private String getQuoteIDForCurrentJob() {
        String quoteIDToUse = "";
        try {
            Statement st = conn.createStatement();
            String a = "Accepted";
            String query = "select * from quote where jobID = '" + currentJobID + "' AND quotestatus = '" + a + "'";
            rs = st.executeQuery(query);

            do {
                if (!rs.next()) {
                    break;
                }
                quoteIDToUse = rs.getString("QuoteID");
            } while (rs.next());

        } catch (Exception e) {
            System.out.println("Problem with getting quote data on finalise page" + e);
        }
        return quoteIDToUse;
    }

    private void quoteComboBoxItemSelected() {
        //set the currentQuoteID
        currentQuoteID = quote_allquotes_combo.getSelectedItem().toString();

        //clear the total textfield values
        clearQuoteFieldValues();

        //set the values based on current quote
        populateMaterials();
        populateOverheads();
        populateLabour();
        populateQuoteCharges();

        //calculate the totals based on the values set
        populateAllTotals();
        calculateQuoteCharges();
        quoteID_l.setText(currentQuoteID);

        //validate the quote status and update the interface accordingly
        validateSelectedQuoteStatus();
    }

    private void refreshGUI() {
        if (currentJobID.equals("")) {
            //new job button was pressed
            initComponentsNewJob();

        } else {
            //manageJob button was pressed
            initComponentsManageJob();
        }
    }

    private boolean okcancel(String theMessage) {
        int result = JOptionPane.showConfirmDialog(null, theMessage, "alert", JOptionPane.OK_CANCEL_OPTION);
        if (result == 0) {
            return true;
        } else {
            return false;

        }
    }

    private void populateAllBars() {
        System.out.println("\ncalc Mat");
        //populate mats
        popBars(Double.parseDouble(work_tf_ACost_mat.getText()),
                Double.parseDouble(work_tf_PCost_mat.getText()),
                Double.parseDouble(work_tf_Quote_mat.getText()),
                work_proBar_primary_mat,
                work_proBar_secondary_mat, warningMat);

        System.out.println("\ncalc Over");
        //populate over
        popBars(Double.parseDouble(work_tf_ACost_over.getText()),
                Double.parseDouble(work_tf_PCost_over.getText()),
                Double.parseDouble(work_tf_Quote_over.getText()),
                work_proBar_primary_over,
                work_proBar_secondary_over, warningOver);

        System.out.println("\ncalc Lab");
        //populate lab
        popBars(Double.parseDouble(work_tf_ACost_labour.getText()),
                Double.parseDouble(work_tf_PCost_labour.getText()),
                Double.parseDouble(work_tf_Quote_labour.getText()),
                work_proBar_primary_labour,
                work_proBar_secondary_labour, warningLab);

        System.out.println("\ncalc Tot");
        //poplate total
        popBars(Double.parseDouble(work_tf_ACost_total.getText()),
                Double.parseDouble(work_tf_PCost_total.getText()),
                Double.parseDouble(work_tf_Quote_total.getText()),
                work_proBar_primary_total,
                work_proBar_secondary_total, warningTotal);
    }

    private void popBars(double ac, double pc, double tq, JProgressBar bar1, JProgressBar bar2, JLabel warning) {

        if (pop1(ac, pc, bar1)) {
            pop2(ac, pc, tq, bar2, warning);
        } else {
            bar2.setValue(0);
            warning.setVisible(false);
        }
    }

    private boolean pop1(double ac, double pc, JProgressBar bar1) {

        if (ac >= pc) {
            bar1.setValue(100);
            return true;
        } else {
            int value = (int) (ac / pc * 100);
            bar1.setValue(value);
            return false;
        }
    }

    private void pop2(double ac, double pc, double tq, JProgressBar bar2, JLabel warning) {
        int value = (int) (((ac - pc) / (tq - pc)) * 100);
        if (value > 100) {
            warning.setVisible(true);
        } else {
            warning.setVisible(false);
        }
        bar2.setValue(value);
    }

}
